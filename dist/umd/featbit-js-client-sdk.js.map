{"version":3,"file":"featbit-js-client-sdk.js","mappings":"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","sources":["webpack://@featbit/js-client-sdk/webpack/universalModuleDefinition","webpack://@featbit/js-client-sdk/./src/Configuration.ts","webpack://@featbit/js-client-sdk/./src/Context.ts","webpack://@featbit/js-client-sdk/./src/FbClientBuilder.ts","webpack://@featbit/js-client-sdk/./src/FbClientCore.ts","webpack://@featbit/js-client-sdk/./src/bootstrap/JsonBootstrapProvider.ts","webpack://@featbit/js-client-sdk/./src/bootstrap/NullBootstrapProvider.ts","webpack://@featbit/js-client-sdk/./src/bootstrap/index.ts","webpack://@featbit/js-client-sdk/./src/constants.ts","webpack://@featbit/js-client-sdk/./src/data-sources/DataSourceUpdates.ts","webpack://@featbit/js-client-sdk/./src/data-sources/createStreamListeners.ts","webpack://@featbit/js-client-sdk/./src/data-sources/index.ts","webpack://@featbit/js-client-sdk/./src/data-sync/DataSyncMode.ts","webpack://@featbit/js-client-sdk/./src/data-sync/NullDataSynchronizer.ts","webpack://@featbit/js-client-sdk/./src/data-sync/PollingDataSynchronizer.ts","webpack://@featbit/js-client-sdk/./src/data-sync/Requestor.ts","webpack://@featbit/js-client-sdk/./src/data-sync/WebSocketDataSynchronizer.ts","webpack://@featbit/js-client-sdk/./src/data-sync/index.ts","webpack://@featbit/js-client-sdk/./src/data-sync/types.ts","webpack://@featbit/js-client-sdk/./src/data-sync/utils.ts","webpack://@featbit/js-client-sdk/./src/errors.ts","webpack://@featbit/js-client-sdk/./src/evaluation/EvalResult.ts","webpack://@featbit/js-client-sdk/./src/evaluation/Evaluator.ts","webpack://@featbit/js-client-sdk/./src/evaluation/ReasonKinds.ts","webpack://@featbit/js-client-sdk/./src/evaluation/data/IFlag.ts","webpack://@featbit/js-client-sdk/./src/evaluation/data/index.ts","webpack://@featbit/js-client-sdk/./src/evaluation/index.ts","webpack://@featbit/js-client-sdk/./src/events/DefaultEventProcessor.ts","webpack://@featbit/js-client-sdk/./src/events/DefaultEventQueue.ts","webpack://@featbit/js-client-sdk/./src/events/DefaultEventSender.ts","webpack://@featbit/js-client-sdk/./src/events/DefaultEventSerializer.ts","webpack://@featbit/js-client-sdk/./src/events/EventDispatcher.ts","webpack://@featbit/js-client-sdk/./src/events/IEventSender.ts","webpack://@featbit/js-client-sdk/./src/events/NullEventProcessor.ts","webpack://@featbit/js-client-sdk/./src/events/event.ts","webpack://@featbit/js-client-sdk/./src/events/index.ts","webpack://@featbit/js-client-sdk/./src/index.ts","webpack://@featbit/js-client-sdk/./src/logging/BasicLogger.ts","webpack://@featbit/js-client-sdk/./src/logging/SafeLogger.ts","webpack://@featbit/js-client-sdk/./src/logging/format.ts","webpack://@featbit/js-client-sdk/./src/logging/index.ts","webpack://@featbit/js-client-sdk/./src/options/ClientContext.ts","webpack://@featbit/js-client-sdk/./src/options/OptionMessages.ts","webpack://@featbit/js-client-sdk/./src/options/UserBuilder.ts","webpack://@featbit/js-client-sdk/./src/options/Validators.ts","webpack://@featbit/js-client-sdk/./src/options/index.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/BrowserInfo.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/BrowserPlatform.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/BrowserRequests.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/BrowserWebSocket.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/FbClient.ts","webpack://@featbit/js-client-sdk/./src/platform/browser/LocalStorageStore.ts","webpack://@featbit/js-client-sdk/./src/platform/index.ts","webpack://@featbit/js-client-sdk/./src/store/BaseStore.ts","webpack://@featbit/js-client-sdk/./src/store/DataKinds.ts","webpack://@featbit/js-client-sdk/./src/store/InMemoryStore.ts","webpack://@featbit/js-client-sdk/./src/store/index.ts","webpack://@featbit/js-client-sdk/./src/store/serialization.ts","webpack://@featbit/js-client-sdk/./src/store/store.ts","webpack://@featbit/js-client-sdk/./src/utils/Emits.ts","webpack://@featbit/js-client-sdk/./src/utils/EventEmitter.ts","webpack://@featbit/js-client-sdk/./src/utils/ValueConverters.ts","webpack://@featbit/js-client-sdk/./src/utils/canonicalizeUri.ts","webpack://@featbit/js-client-sdk/./src/utils/debounce.ts","webpack://@featbit/js-client-sdk/./src/utils/http.ts","webpack://@featbit/js-client-sdk/./src/utils/index.ts","webpack://@featbit/js-client-sdk/./src/utils/isNullOrUndefined.ts","webpack://@featbit/js-client-sdk/./src/utils/serializeUser.ts","webpack://@featbit/js-client-sdk/./src/utils/sleep.ts","webpack://@featbit/js-client-sdk/./src/version.ts","webpack://@featbit/js-client-sdk/webpack/bootstrap","webpack://@featbit/js-client-sdk/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, () => {\nreturn ","import { IOptions } from \"./options/IOptions\";\nimport { ILogger } from \"./logging/ILogger\";\nimport { IValidatedOptions } from \"./options/IValidatedOptions\";\nimport { NumberWithMinimum, TypeValidator, TypeValidators, UserValidator } from \"./options/Validators\";\nimport OptionMessages from \"./options/OptionMessages\";\nimport { IStore } from \"./platform/IStore\";\nimport { IClientContext } from \"./options/IClientContext\";\nimport { IDataSynchronizer } from \"./data-sync/IDataSynchronizer\";\nimport { IDataSourceUpdates } from \"./store/IDataSourceUpdates\";\nimport InMemoryStore from \"./store/InMemoryStore\";\nimport { VoidFunction } from \"./utils/VoidFunction\";\nimport { isNullOrUndefined } from \"./utils/isNullOrUndefined\";\nimport { canonicalizeUri } from \"./utils/canonicalizeUri\";\nimport { IBootstrapProvider } from \"./bootstrap/IBootstrapProvider\";\nimport { NullBootstrapProvider } from \"./bootstrap/NullBootstrapProvider\";\nimport { EmptyString } from \"./constants\";\nimport { DataSyncModeEnum } from \"./data-sync/DataSyncMode\";\nimport { IUser } from \"./options/IUser\";\nimport { JsonBootstrapProvider } from \"./bootstrap\";\n\n// Once things are internal to the implementation of the SDK we can depend on\n// types. Calls to the SDK could contain anything without any regard to typing.\n// So, data we take from external sources must be normalized into something\n// that can be trusted.\n\n/**\n * These perform cursory validations. Complex objects are implemented with classes\n * and these should allow for conditional construction.\n */\nconst validations: Record<string, TypeValidator> = {\n  startWaitTime: TypeValidators.Number,\n  sdkKey: TypeValidators.String,\n  pollingUri: TypeValidators.String,\n  streamingUri: TypeValidators.String,\n  eventsUri: TypeValidators.String,\n  webSocketPingInterval: TypeValidators.Number,\n  logger: TypeValidators.Object,\n  store: TypeValidators.ObjectOrFactory,\n  dataSynchronizer: TypeValidators.ObjectOrFactory,\n  flushInterval: TypeValidators.Number,\n  maxEventsInQueue: TypeValidators.Number,\n  pollingInterval: TypeValidators.Number,\n  offline: TypeValidators.Boolean,\n  dataSyncMode: TypeValidators.String,\n  bootstrap: TypeValidators.Bootstrap,\n  user: TypeValidators.User\n};\n\n/**\n * @internal\n */\nexport const defaultValues: IValidatedOptions = {\n  startWaitTime: 5000,\n  sdkKey: '',\n  pollingUri: '',\n  streamingUri: '',\n  eventsUri: '',\n  dataSyncMode: DataSyncModeEnum.STREAMING,\n  sendEvents: true,\n  webSocketPingInterval: 18 * 1000,\n  flushInterval: 2000,\n  maxEventsInQueue: 10000,\n  pollingInterval: 30000,\n  offline: false,\n  store: (options: IOptions) => new InMemoryStore(),\n  bootstrap: undefined,\n  user: undefined,\n};\n\nfunction validateTypesAndNames(options: IOptions): {\n  errors: string[];\n  validatedOptions: IValidatedOptions;\n} {\n  let errors: string[] = [];\n  const validatedOptions: IValidatedOptions = {...defaultValues};\n  Object.keys(options).forEach((optionName) => {\n    // We need to tell typescript it doesn't actually know what options are.\n    // If we don't then it complains we are doing crazy things with it.\n    const optionValue = (options as unknown as any)[optionName];\n    const validator = validations[optionName];\n    if (validator) {\n      if (!validator.is(optionValue)) {\n        if (validator.getType() === 'boolean') {\n          errors.push(OptionMessages.wrongOptionTypeBoolean(optionName, typeof optionValue));\n          validatedOptions[optionName] = !!optionValue;\n        } else if (\n          validator instanceof NumberWithMinimum &&\n          TypeValidators.Number.is(optionValue)\n        ) {\n          const {min} = validator as NumberWithMinimum;\n          errors.push(OptionMessages.optionBelowMinimum(optionName, optionValue, min));\n          validatedOptions[optionName] = min;\n        } else if (validator instanceof UserValidator) {\n          errors = [...errors, ...validator.messages];\n          validatedOptions[optionName] = defaultValues[optionName];\n        } else {\n          errors.push(\n            OptionMessages.wrongOptionType(optionName, validator.getType(), typeof optionValue),\n          );\n          validatedOptions[optionName] = defaultValues[optionName];\n        }\n      } else {\n        validatedOptions[optionName] = optionValue;\n      }\n    } else {\n      options.logger?.warn(OptionMessages.unknownOption(optionName));\n    }\n  });\n  return {errors, validatedOptions};\n}\n\nfunction validateEndpoints(options: IOptions, validatedOptions: IValidatedOptions) {\n  const {streamingUri, pollingUri, eventsUri} = options;\n  const streamingUriMissing = isNullOrUndefined(streamingUri) || streamingUri === EmptyString;\n  const pollingUriMissing = isNullOrUndefined(pollingUri) || pollingUri === EmptyString;\n  const eventsUriMissing = isNullOrUndefined(eventsUri) || eventsUri === EmptyString;\n\n  if (!validatedOptions.offline && (eventsUriMissing || (streamingUriMissing && pollingUriMissing))) {\n    if (eventsUriMissing) {\n      validatedOptions.logger?.error(OptionMessages.partialEndpoint('eventsUri'));\n    }\n\n    if (validatedOptions.dataSyncMode === DataSyncModeEnum.STREAMING && streamingUriMissing) {\n      validatedOptions.logger?.error(OptionMessages.partialEndpoint('streamingUri'));\n    }\n\n    if (validatedOptions.dataSyncMode === DataSyncModeEnum.POLLING && pollingUriMissing) {\n      validatedOptions.logger?.error(OptionMessages.partialEndpoint('pollingUri'));\n    }\n  }\n}\n\nexport default class Configuration {\n  public readonly startWaitTime: number;\n\n  public readonly sdkKey: string;\n\n  public readonly streamingUri: string;\n\n  public readonly pollingUri: string;\n\n  public readonly eventsUri: string;\n\n  public readonly webSocketPingInterval: number;\n\n  public readonly logger?: ILogger;\n\n  public readonly flushInterval: number;\n\n  public readonly maxEventsInQueue: number;\n\n  public readonly pollingInterval: number;\n\n  public readonly offline: boolean;\n\n  public readonly dataSyncMode: DataSyncModeEnum;\n\n  public readonly bootstrapProvider: IBootstrapProvider = new NullBootstrapProvider();\n\n  public user: IUser;\n\n  public readonly storeFactory: (clientContext: IClientContext) => IStore;\n\n  public readonly dataSynchronizerFactory?: (\n    clientContext: IClientContext,\n    store: IStore,\n    dataSourceUpdates: IDataSourceUpdates,\n    initSuccessHandler: VoidFunction,\n    errorHandler?: (e: Error) => void,\n  ) => IDataSynchronizer;\n\n  constructor(options: IOptions = {}) {\n    // The default will handle undefined, but not null.\n    // Because we can be called from JS we need to be extra defensive.\n    options = options || {};\n    // If there isn't a valid logger from the platform, then logs would go nowhere.\n    this.logger = options.logger;\n\n    const {errors, validatedOptions} = validateTypesAndNames(options);\n    errors.forEach((error) => {\n      this.logger?.warn(error);\n    });\n\n    this.user = options.user!;\n\n    validateEndpoints(options, validatedOptions);\n    this.streamingUri = `${ canonicalizeUri(validatedOptions.streamingUri) }/streaming`;\n    this.pollingUri = `${ canonicalizeUri(validatedOptions.pollingUri) }/api/public/sdk/client/latest-all`;\n    this.eventsUri = `${ canonicalizeUri(validatedOptions.eventsUri) }/api/public/insight/track`;\n\n    this.startWaitTime = validatedOptions.startWaitTime;\n\n    this.sdkKey = validatedOptions.sdkKey;\n    this.webSocketPingInterval = validatedOptions.webSocketPingInterval!;\n\n    this.flushInterval = validatedOptions.flushInterval;\n    this.maxEventsInQueue = validatedOptions.maxEventsInQueue;\n    this.pollingInterval = validatedOptions.pollingInterval;\n\n    this.offline = validatedOptions.offline;\n    if (validatedOptions.bootstrap && validatedOptions.bootstrap.length > 0) {\n      try {\n        this.bootstrapProvider = new JsonBootstrapProvider(validatedOptions.bootstrap);\n      } catch (_) {\n        this.logger?.error('Failed to parse bootstrap JSON, use NullBootstrapProvider.');\n      }\n    }\n\n    if (this.offline) {\n      this.logger?.info('Offline mode enabled. No data synchronization with the FeatBit server will occur.');\n    }\n\n    this.dataSyncMode = validatedOptions.dataSyncMode;\n\n    if (TypeValidators.Function.is(validatedOptions.dataSynchronizer)) {\n      // @ts-ignore\n      this.dataSynchronizerFactory = validatedOptions.dataSynchronizer;\n    } else {\n      // The processor is already created, just have the method return it.\n      // @ts-ignore\n      this.dataSynchronizerFactory = () => validatedOptions.dataSynchronizer;\n    }\n\n    if (TypeValidators.Function.is(validatedOptions.store)) {\n      // @ts-ignore\n      this.storeFactory = validatedOptions.store;\n    } else {\n      // The store is already created, just have the method return it.\n      // @ts-ignore\n      this.storeFactory = () => validatedOptions.store;\n    }\n  }\n}","import { IUser } from \"./options/IUser\";\n\nexport default class Context {\n  private _user?: IUser;\n  /**\n   * Is this a valid context. If a valid context cannot be created, then this flag will be true.\n   * The validity of a context should be tested before it is used.\n   */\n  public readonly valid: boolean;\n\n  public readonly message?: string;\n\n  /**\n   * Contexts should be created using the static factory method {@link Context.fromUser}.\n   *\n   * The factory methods are static functions within the class because they access private\n   * implementation details, so they cannot be free functions.\n   */\n  private constructor(valid: boolean, message?: string) {\n    this.valid = valid;\n    this.message = message;\n  }\n\n  public static fromUser(user: IUser): Context {\n    if (!user) {\n      return Context.contextForError('No user specified');\n    }\n\n    const {keyId, name} = user;\n\n    if (keyId === undefined || keyId === null || keyId.trim() === '') {\n      return Context.contextForError('key is mandatory');\n    }\n\n    const context = new Context(true);\n    context._user = user;\n\n    return context;\n  }\n\n  get user(): IUser {\n    return this._user!;\n  }\n\n  get keyId(): string {\n    return this._user!.keyId;\n  }\n\n  value(property: string): any {\n    if (property === 'keyId') {\n      return this._user?.keyId;\n    } else if (property === 'name') {\n      return this._user?.name;\n    } else {\n      return this._user?.customizedProperties?.find(x => x.name === property)?.value;\n    }\n  }\n\n  private static contextForError(message: string) {\n    return new Context(false, message);\n  }\n}","import { IFbClient } from \"./IFbClient\";\nimport { IOptions } from \"./options/IOptions\";\nimport FbClient from \"./platform/browser/FbClient\";\nimport { IDataSynchronizer } from \"./data-sync/IDataSynchronizer\";\nimport { IClientContext } from \"./options/IClientContext\";\nimport { IDataSourceUpdates } from \"./store/IDataSourceUpdates\";\nimport { VoidFunction } from \"./utils/VoidFunction\";\nimport { ILogger } from \"./logging/ILogger\";\nimport { DataSyncModeEnum } from \"./data-sync/DataSyncMode\";\nimport { IUser } from \"./options/IUser\";\nimport { IFlagBase } from \"./evaluation\";\nimport { IPlatform } from \"./platform\";\n\n/**\n * Creates an instance of the FeatBit client.\n *\n * Applications should instantiate a single instance for the lifetime of the application.\n * The client will begin attempting to connect to FeatBit as soon as it is created. To\n * determine when it is ready to use, call {@link IFbClient.waitForInitialization}, or register an\n * event listener for the `\"ready\"` event using {@link IFbClient.on}.\n *\n * **Important:** Do **not** try to instantiate `FbClient` with its constructor\n * (`new FbClientNode()`); the SDK does not currently support\n * this.\n *\n * @return\n *   The new {@link IFbClient} instance.\n */\nexport class FbClientBuilder {\n  private _options: IOptions;\n  private _platform: IPlatform | undefined;\n\n  constructor(options?: IOptions) {\n    this._options = options ?? {};\n  }\n\n  /**\n   * Creates a new instance of the FeatBit client.\n   */\n  build(): IFbClient {\n    return new FbClient(this._options, this._platform);\n  }\n\n  platform(platform: IPlatform | undefined): FbClientBuilder {\n    this._platform = platform;\n    return this;\n  }\n\n  /**\n   * Refer to {@link IOptions.startWaitTime}.\n   */\n  startWaitTime(startWaitTime: number): FbClientBuilder {\n    this._options.startWaitTime = startWaitTime;\n    return this;\n  }\n\n  /**\n   * Refer to {@link IOptions.sdkKey}.\n   */\n  sdkKey(sdkKey: string): FbClientBuilder {\n    this._options.sdkKey = sdkKey;\n    return this;\n  }\n\n  /**\n   * Refer to {@link IOptions.user}.\n   */\n  user(user: IUser): FbClientBuilder {\n    this._options.user = user;\n    return this;\n  }\n\n  /**\n   * Refer to {@link IOptions.streamingUri}.\n   */\n  streamingUri(streamingUri: string): FbClientBuilder {\n    this._options.streamingUri = streamingUri;\n    return this;\n  }\n\n  /**\n   * Refer to {@link IOptions.pollingUri}.\n   */\n  pollingUri(pollingUri: string): FbClientBuilder {\n    this._options.pollingUri = pollingUri;\n    return this;\n  }\n\n  /**\n   * Refer to {@link IOptions.eventsUri}.\n   */\n  eventsUri(eventsUri: string): FbClientBuilder {\n    this._options.eventsUri = eventsUri;\n    return this;\n  }\n\n  /**\n   * Refer to {@link IOptions.dataSyncMode}.\n   */\n  dataSyncMode(mode: DataSyncModeEnum): FbClientBuilder {\n    this._options.dataSyncMode = mode;\n    return this;\n  }\n\n  /**\n   * Refer to {@link IOptions.pollingInterval}.\n   */\n  pollingInterval(pollingInterval: number): FbClientBuilder {\n    this._options.pollingInterval = pollingInterval;\n    return this;\n  }\n\n  /**\n   * Refer to {@link IOptions.flushInterval}.\n   */\n  flushInterval(flushInterval: number): FbClientBuilder {\n    this._options.flushInterval = flushInterval;\n    return this;\n  }\n\n  /**\n   * Refer to {@link IOptions.maxEventsInQueue}.\n   */\n  maxEventsInQueue(maxEventsInQueue: number): FbClientBuilder {\n    this._options.maxEventsInQueue = maxEventsInQueue;\n    return this;\n  }\n\n  /**\n   * Refer to {@link IOptions.logger}.\n   */\n  logger(logger: ILogger): FbClientBuilder {\n    this._options.logger = logger;\n    return this;\n  }\n\n  /**\n   * Refer to {@link IOptions.offline}.\n   */\n  offline(offline: boolean): FbClientBuilder {\n    this._options.offline = offline;\n    return this;\n  }\n\n  /**\n   * Use the JsonBootstrapProvider.\n   */\n  bootstrap(flags: IFlagBase[]): FbClientBuilder {\n    this._options.bootstrap = flags;\n    return this;\n  }\n\n  /**\n   * Refer to {@link IOptions.dataSynchronizer}.\n   */\n  dataSynchronizer(\n    dataSynchronizer: IDataSynchronizer |\n    ((\n      clientContext: IClientContext,\n      dataSourceUpdates: IDataSourceUpdates,\n      initSuccessHandler: VoidFunction,\n      errorHandler?: (e: Error) => void,\n    ) => IDataSynchronizer)\n  ): FbClientBuilder {\n    this._options.dataSynchronizer = dataSynchronizer;\n    return this;\n  }\n}","import { IFbClientCore } from \"./IFbClientCore\";\nimport { IPlatform } from \"./platform/IPlatform\";\nimport Configuration from \"./Configuration\";\nimport { ILogger } from \"./logging/ILogger\";\nimport ClientContext from \"./options/ClientContext\";\nimport DataSourceUpdates from \"./data-sources/DataSourceUpdates\";\nimport { createStreamListeners } from \"./data-sources/createStreamListeners\";\nimport { IEvalDetail } from \"./evaluation/IEvalDetail\";\nimport WebSocketDataSynchronizer from \"./data-sync/WebSocketDataSynchronizer\";\nimport PollingDataSynchronizer from \"./data-sync/PollingDataSynchronizer\";\nimport Requestor from \"./data-sync/Requestor\";\nimport { IDataSynchronizer } from \"./data-sync/IDataSynchronizer\";\nimport DataKinds from \"./store/DataKinds\";\nimport Evaluator from \"./evaluation/Evaluator\";\nimport { ReasonKinds } from \"./evaluation/ReasonKinds\";\nimport { ClientError, TimeoutError } from \"./errors\";\nimport Context from \"./Context\";\nimport { IConvertResult, ValueConverters } from \"./utils/ValueConverters\";\nimport { NullDataSynchronizer } from \"./data-sync/NullDataSynchronizer\";\nimport { IEventProcessor } from \"./events/IEventProcessor\";\nimport { NullEventProcessor } from \"./events/NullEventProcessor\";\nimport { DefaultEventProcessor } from \"./events/DefaultEventProcessor\";\nimport { IStore } from \"./platform/IStore\";\nimport { IOptions } from \"./options/IOptions\";\nimport { MetricEvent } from \"./events/event\";\nimport { DataSyncModeEnum } from \"./data-sync/DataSyncMode\";\nimport { IUser } from \"./options/IUser\";\nimport { UserValidator } from \"./options/Validators\";\n\nenum ClientState {\n  Initializing,\n  Initialized,\n  Failed,\n}\n\nexport interface IClientCallbacks {\n  onError: (err: Error) => void;\n  onFailed: (err: Error) => void;\n  onReady: () => void;\n  // Called whenever flags change, if there are listeners.\n  onUpdate: (keys: string[]) => void;\n  // Method to check if event listeners have been registered.\n  // If none are registered, then onUpdate will never be called.\n  hasEventListeners: () => boolean;\n}\n\nexport class FbClientCore implements IFbClientCore {\n  private state: ClientState = ClientState.Initializing;\n\n  private store?: IStore;\n\n  private dataSynchronizer?: IDataSynchronizer;\n\n  private eventProcessor?: IEventProcessor;\n\n  private evaluator?: Evaluator;\n\n  private initResolve?: (value: IFbClientCore | PromiseLike<IFbClientCore>) => void;\n\n  private initReject?: (err: Error) => void;\n\n  private rejectionReason: Error | undefined;\n\n  private initializedPromise?: Promise<IFbClientCore>;\n\n  private config: Configuration;\n\n  private dataSourceUpdates?: DataSourceUpdates;\n\n  private onError: (err: Error) => void;\n\n  private onFailed: (err: Error) => void;\n\n  private onReady: () => void;\n\n  logger?: ILogger;\n\n  constructor(\n    private options: IOptions,\n    private platform: IPlatform,\n    callbacks: IClientCallbacks\n  ) {\n    this.onError = callbacks.onError;\n    this.onFailed = callbacks.onFailed;\n    this.onReady = callbacks.onReady;\n\n    const {onUpdate, hasEventListeners} = callbacks;\n    const config = new Configuration(options);\n\n    if (!config.sdkKey && !config.offline) {\n      throw new Error('You must configure the client with an SDK key');\n    }\n\n    if (!config.user) {\n      throw new Error('You must configure the client with a user');\n    }\n\n    this.config = config;\n    this.logger = config.logger;\n\n    this.init(platform, onUpdate, hasEventListeners);\n  }\n\n  private async init(platform: IPlatform, onUpdate: (keys: string[]) => void, hasEventListeners: () => boolean) {\n    const clientContext = new ClientContext(this.config.sdkKey, this.config, platform);\n    this.store = this.config.storeFactory(clientContext);\n    await this.store.identify(this.config.user);\n    this.dataSourceUpdates = new DataSourceUpdates(this.store, hasEventListeners, onUpdate);\n    this.evaluator = new Evaluator(this.store);\n\n    // use bootstrap provider to populate store\n    await this.config.bootstrapProvider.populate(this.config.user.keyId, this.dataSourceUpdates);\n\n    if (this.config.offline) {\n      this.eventProcessor = new NullEventProcessor();\n      this.dataSynchronizer = new NullDataSynchronizer();\n\n      this.initSuccess();\n    } else {\n      this.eventProcessor = new DefaultEventProcessor(clientContext);\n\n      const listeners = createStreamListeners(this.dataSourceUpdates, this.logger, {\n        put: () => this.initSuccess(),\n        patch: () => this.initSuccess()\n      });\n\n      const dataSynchronizer = this.config.dataSyncMode === DataSyncModeEnum.STREAMING\n        ? new WebSocketDataSynchronizer(\n          this.config.sdkKey,\n          this.config.user,\n          clientContext,\n          platform.webSocket,\n          () => this.store!.version,\n          listeners,\n          this.config.webSocketPingInterval\n        )\n        : new PollingDataSynchronizer(\n          this.config,\n          new Requestor(this.config.sdkKey, this.config, this.platform.info, this.platform.requests),\n          () => this.store!.version,\n          listeners,\n          (e) => this.dataSourceErrorHandler(e),\n        );\n\n      this.dataSynchronizer = this.config.dataSynchronizerFactory?.(\n        clientContext,\n        this.store,\n        this.dataSourceUpdates,\n        () => this.initSuccess(),\n        (e) => this.dataSourceErrorHandler(e),\n      ) ?? dataSynchronizer;\n    }\n\n    this.start();\n  }\n\n  async identify(user: IUser) {\n    const validator = new UserValidator();\n    if (!validator.is(user)) {\n      validator.messages.forEach((error: string) => {\n        this.logger?.warn(error);\n      });\n\n      return;\n    }\n\n    this.config.user = user;\n    await this.store!.identify(user);\n    this.dataSynchronizer!.identify(user);\n    const [ flags ] = this.store!.all(DataKinds.Flags);\n    if (Object.keys(flags).length === 0) {\n      await this.config.bootstrapProvider.populate(user.keyId, this.dataSourceUpdates!);\n    }\n  }\n\n  private start() {\n    if (this.config.offline) {\n      return;\n    }\n\n    this.dataSynchronizer!.start();\n    setTimeout(() => {\n      if (!this.initialized()) {\n        const msg = `FbClient failed to start successfully within ${ this.config.startWaitTime } milliseconds. ` +\n          'This error usually indicates a connection issue with FeatBit or an invalid sdkKey.' +\n          'Please double-check your sdkKey and streamingUri/pollingUri configuration. ' +\n          'We will continue to initialize the FbClient, it still have a chance to get to work ' +\n          'if it\\'s a temporary network issue';\n\n        const error = new TimeoutError(msg);\n        this.state = ClientState.Failed;\n        this.rejectionReason = error;\n        this.initReject?.(error);\n\n        return this.logger?.warn(msg);\n      }\n    }, this.config.startWaitTime);\n  }\n\n  initialized(): boolean {\n    return this.state === ClientState.Initialized;\n  }\n\n  waitForInitialization(): Promise<IFbClientCore> {\n    // An initialization promise is only created if someone is going to use that promise.\n    // If we always created an initialization promise, and there was no call waitForInitialization\n    // by the time the promise was rejected, then that would result in an unhandled promise\n    // rejection.\n\n    // Initialization promise was created by a previous call to waitForInitialization.\n    if (this.initializedPromise) {\n      return this.initializedPromise;\n    }\n\n    // Initialization completed before waitForInitialization was called, so we have completed\n    // and there was no promise. So we make a resolved promise and return it.\n    if (this.state === ClientState.Initialized) {\n      this.initializedPromise = Promise.resolve(this);\n      return this.initializedPromise;\n    }\n\n    // Initialization failed before waitForInitialization was called, so we have completed\n    // and there was no promise. So we make a rejected promise and return it.\n    if (this.state === ClientState.Failed) {\n      this.initializedPromise = Promise.reject(this.rejectionReason);\n      return this.initializedPromise;\n    }\n\n    if (!this.initializedPromise) {\n      this.initializedPromise = new Promise((resolve, reject) => {\n        this.initResolve = resolve;\n        this.initReject = reject;\n      });\n    }\n    return this.initializedPromise;\n  }\n\n  boolVariation(\n    key: string,\n    defaultValue: boolean\n  ): boolean {\n    return this.evaluateCore(key, defaultValue, ValueConverters.bool).value!;\n  }\n\n  boolVariationDetail(\n    key: string,\n    defaultValue: boolean\n  ): IEvalDetail<boolean> {\n    return this.evaluateCore(key, defaultValue, ValueConverters.bool);\n  }\n\n  jsonVariation(key: string, defaultValue: any): any {\n    return this.evaluateCore(key, defaultValue, ValueConverters.json).value!;\n  }\n\n  jsonVariationDetail(key: string, defaultValue: any): IEvalDetail<any> {\n    return this.evaluateCore(key, defaultValue, ValueConverters.json);\n  }\n\n  numberVariation(key: string, defaultValue: number): number {\n    return this.evaluateCore(key, defaultValue, ValueConverters.number).value!;\n  }\n\n  numberVariationDetail(key: string, defaultValue: number): IEvalDetail<number> {\n    return this.evaluateCore(key, defaultValue, ValueConverters.number);\n  }\n\n  stringVariation(key: string, defaultValue: string): string {\n    return this.evaluateCore(key, defaultValue, ValueConverters.string).value!;\n  }\n\n  stringVariationDetail(key: string, defaultValue: string): IEvalDetail<string> {\n    return this.evaluateCore(key, defaultValue, ValueConverters.string);\n  }\n\n  variation(key: string, defaultValue: string): string {\n    return this.evaluateCore(key, defaultValue, ValueConverters.string).value!;\n  }\n\n  variationDetail(key: string, defaultValue: string): IEvalDetail<string> {\n    return this.evaluateCore(key, defaultValue, ValueConverters.string);\n  }\n\n  getAllVariations(): Promise<IEvalDetail<string>[]> {\n    const context = Context.fromUser(this.config.user);\n    if (!context.valid) {\n      const error = new ClientError(\n        `${ context.message ?? 'User not valid;' } returning default value.`,\n      );\n      this.onError(error);\n\n      return Promise.resolve([]);\n    }\n\n    const [flags, _] = this.store!.all(DataKinds.Flags);\n    const result = Object.keys(flags).map(flagKey => {\n      const evalResult = this.evaluator!.evaluate(flagKey);\n      return {flagKey, kind: evalResult.kind, reason: evalResult.reason, value: evalResult.value?.variation};\n    });\n\n    return Promise.resolve(result);\n  }\n\n  async close(): Promise<void> {\n    await this.eventProcessor!.close();\n    this.dataSynchronizer?.close();\n    this.store!.close();\n  }\n\n  track(eventName: string, metricValue?: number | undefined): void {\n    const metricEvent = new MetricEvent(this.config.user, eventName, this.platform.info.appType, metricValue ?? 1);\n    this.eventProcessor!.record(metricEvent);\n    return;\n  }\n\n  async flush(callback?: (res: boolean) => void): Promise<boolean> {\n    try {\n      await this.eventProcessor!.flush();\n      callback?.(true);\n      return true;\n    } catch (err) {\n      callback?.(false);\n      return false;\n    }\n  }\n\n  evaluateCore<TValue>(\n    flagKey: string,\n    defaultValue: TValue,\n    typeConverter: (value: string) => IConvertResult<TValue>\n  ): IEvalDetail<TValue> {\n    const context = Context.fromUser(this.config.user);\n    if (!context.valid) {\n      const error = new ClientError(\n        `${ context.message ?? 'User not valid;' } returning default value.`,\n      );\n      this.onError(error);\n\n      return {flagKey, kind: ReasonKinds.Error, reason: error.message, value: defaultValue};\n    }\n\n    const evalResult = this.evaluator!.evaluate(flagKey);\n\n    if (evalResult.kind === ReasonKinds.FlagNotFound) {\n      // flag not found, return default value\n      const error = new ClientError(evalResult.reason!);\n      this.onError(error);\n\n      return {flagKey, kind: evalResult.kind, reason: evalResult.reason, value: defaultValue};\n    }\n\n    if (!this.initialized()) {\n      this.logger?.warn(\n        'Variation called before FeatBit client initialization completed (did you wait for the' +\n        \"'ready' event?)\",\n      );\n    } else {\n      // send event\n      this.eventProcessor!.record(evalResult.toEvalEvent(this.config.user));\n    }\n\n    const {isSucceeded, value} = typeConverter(evalResult.value?.variation!);\n    return isSucceeded\n      ? {flagKey, kind: evalResult.kind, reason: evalResult.reason, value}\n      : {flagKey, kind: ReasonKinds.WrongType, reason: 'type mismatch', value: defaultValue};\n  }\n\n  private dataSourceErrorHandler(e: any) {\n    const error =\n      e.code === 401 ? new Error('Authentication failed. Double check your SDK key.') : e;\n\n    this.onError(error);\n    this.onFailed(error);\n\n    if (!this.initialized()) {\n      this.state = ClientState.Failed;\n      this.rejectionReason = error;\n      this.initReject?.(error);\n    }\n  }\n\n  private initSuccess() {\n    if (!this.initialized()) {\n      this.state = ClientState.Initialized;\n      this.logger?.info('FbClient started successfully.');\n      this.initResolve?.(this);\n      this.onReady();\n    }\n  }\n}\n","import { IBootstrapProvider } from \"./IBootstrapProvider\";\nimport { deserializeAll } from \"../store/serialization\";\nimport { IDataSourceUpdates } from \"../store/IDataSourceUpdates\";\nimport { IStoreDataStorage } from \"../store/store\";\nimport { isNullOrUndefined } from \"../utils/isNullOrUndefined\";\nimport { IFlag, IFlagBase } from \"../evaluation/data/IFlag\";\n\nexport class JsonBootstrapProvider implements IBootstrapProvider {\n  private dataSet?: IStoreDataStorage;\n\n  constructor(bootstrap: IFlagBase[]) {\n    const flags: IFlag[] = (bootstrap || []).map((flag: IFlagBase) => ({...flag, variationOptions: flag.variationOptions || [{id: null, variation: flag.variation}]})) as IFlag[];\n\n    const data = deserializeAll(flags);\n    this.dataSet = {\n      flags: data.flags,\n      version: 0\n    };\n  }\n\n  populate(userKeyId: string, dataSourceUpdates: IDataSourceUpdates, callback?: () => void): Promise<void> {\n    return new Promise((resolve, reject) => {\n      if (isNullOrUndefined(this.dataSet)) {\n        return resolve();\n      }\n\n      const internalCallback = () => {\n        resolve();\n        callback?.();\n      }\n\n      dataSourceUpdates.init(userKeyId, this.dataSet!, internalCallback);\n    });\n  }\n}","import { IBootstrapProvider } from \"./IBootstrapProvider\";\nimport { IDataSourceUpdates } from \"../store/IDataSourceUpdates\";\nimport { IStoreDataStorage } from \"../store/store\";\n\nexport class NullBootstrapProvider implements IBootstrapProvider {\n  private dataSet?: IStoreDataStorage;\n\n  constructor() {\n    this.dataSet = {\n      flags: {},\n      version: 0\n    };\n  }\n\n  populate(userKeyId: string, dataSourceUpdates: IDataSourceUpdates, callback?: () => void): Promise<void> {\n    return new Promise((resolve, reject) => {\n      resolve();\n      callback?.();\n    });\n  }\n}","export * from './IBootstrapProvider';\nexport * from './JsonBootstrapProvider';\nexport * from './NullBootstrapProvider';","export const EmptyString = '';\nexport const MinInt: number = 0x80000000;","import { IDataSourceUpdates } from \"../store/IDataSourceUpdates\";\nimport {\n  IStoreDataStorage,\n  IStoreItem,\n  IKeyedStoreItem\n} from \"../store/store\";\nimport { IStore } from \"../platform/IStore\";\nimport { IDataKind } from \"../IDataKind\";\nimport DataKinds from \"../store/DataKinds\";\n\n/**\n * @internal\n */\nexport default class DataSourceUpdates implements IDataSourceUpdates {\n\n  constructor(\n    private readonly store: IStore,\n    private readonly hasEventListeners: () => boolean,\n    private readonly onChange: (keys: string[]) => void,\n  ) {\n  }\n\n  init(userKeyId: string, allData: IStoreDataStorage, callback?: () => void): void {\n    if (userKeyId !== this.store.user.keyId) {\n      callback?.();\n      return;\n    }\n\n    const checkForChanges = this.hasEventListeners();\n    const doInit = async (oldData?: IStoreDataStorage) => {\n      await this.store.init(allData);\n      Promise.resolve().then(() => {\n        if (checkForChanges) {\n          const updatedKeys = Object.keys(allData)\n            .flatMap((namespace) => {\n              const oldDataForKind = oldData?.[namespace] || {};\n              const newDataForKind = allData[namespace];\n              const mergedData = {...oldDataForKind, ...newDataForKind};\n              return Object.keys(mergedData)\n                .filter((key: string) => this.isUpdated(oldDataForKind && oldDataForKind[key], newDataForKind && newDataForKind[key]));\n            });\n          updatedKeys.length > 0 && this.onChange(updatedKeys);\n        }\n      });\n      callback?.();\n    };\n\n    if (checkForChanges) {\n      const [flags, version] = this.store.all(DataKinds.Flags);\n      const oldData = {\n        flags,\n        version\n      };\n      doInit(oldData);\n    } else {\n      doInit();\n    }\n  }\n\n  upsert(userKeyId: string, kind: IDataKind, data: IKeyedStoreItem, callback: () => void): void {\n    if (userKeyId !== this.store.user.keyId) {\n      callback?.();\n      return;\n    }\n\n    const {key} = data;\n    const checkForChanges = this.hasEventListeners();\n    const doUpsert = async (oldItem?: IStoreItem) => {\n      await this.store.upsert(kind, data);\n      Promise.resolve().then(() => {\n        if (checkForChanges && this.isUpdated(oldItem, data[key])) {\n          this.onChange([key]);\n        }\n      });\n\n      callback?.();\n    };\n    if (checkForChanges) {\n      const item = this.store.get(kind, key);\n      doUpsert(item || undefined);\n    } else {\n      doUpsert();\n    }\n  }\n\n  private isUpdated(oldData?: IStoreItem, newData?: IStoreItem): boolean {\n    return !oldData || !newData || newData.version > oldData.version\n  }\n}","import { IDataSourceUpdates } from \"../store/IDataSourceUpdates\";\nimport { ILogger } from \"../logging/ILogger\";\nimport { VoidFunction } from \"../utils/VoidFunction\";\nimport {\n  deserializeAll,\n  deserializePatch,\n  IPatchData,\n  Flags\n} from \"../store/serialization\";\nimport DataKinds from \"../store/DataKinds\";\nimport { IStoreDataStorage } from \"../store/store\";\nimport { EventName, ProcessStreamResponse } from \"../data-sync/types\";\n\nexport const createPutListener = (\n  dataSourceUpdates: IDataSourceUpdates,\n  logger?: ILogger,\n  onPutCompleteHandler: VoidFunction = () => {\n  },\n) => ({\n  deserializeData: deserializeAll,\n  processJson: async (userKeyId: string, {flags}: Flags) => {\n    const initData: IStoreDataStorage = {\n      flags: flags,\n      version: 0\n    };\n\n    logger?.debug('Initializing all data');\n    dataSourceUpdates.init(userKeyId, initData, onPutCompleteHandler);\n  },\n});\n\nexport const createPatchListener = (\n  dataSourceUpdates: IDataSourceUpdates,\n  logger?: ILogger,\n  onPatchCompleteHandler: VoidFunction = () => {\n  },\n) => ({\n  deserializeData: deserializePatch,\n  processJson: async (userKeyId: string, data: IPatchData[]) => {\n    if (data?.length === 0) {\n      onPatchCompleteHandler?.();\n      return;\n    }\n\n    data?.forEach(item => {\n      logger?.debug(`Updating ${ item.data.key } in ${ item.kind.namespace }`);\n      dataSourceUpdates.upsert(userKeyId, item.kind, item.data, onPatchCompleteHandler);\n    })\n  },\n});\n\n\nexport const createStreamListeners = (\n  dataSourceUpdates: IDataSourceUpdates,\n  logger?: ILogger,\n  onCompleteHandlers?: {\n    put?: VoidFunction;\n    patch?: VoidFunction;\n    delete?: VoidFunction;\n  },\n) => {\n  const listeners = new Map<EventName, ProcessStreamResponse>();\n  listeners.set('put', createPutListener(dataSourceUpdates, logger, onCompleteHandlers?.put));\n  listeners.set('patch', createPatchListener(dataSourceUpdates, logger, onCompleteHandlers?.patch));\n  return listeners;\n};\n","export * from './createStreamListeners';\nexport * from './DataSourceUpdates';","export enum DataSyncModeEnum {\n  POLLING = 'polling',\n  STREAMING = 'streaming'\n}","import { IDataSynchronizer } from \"./IDataSynchronizer\";\n\nexport class NullDataSynchronizer implements IDataSynchronizer {\n  close(): void {\n  }\n\n  start(): void {\n  }\n\n  stop(): void {\n  }\n\n  identify(): void {\n  }\n}","import { isHttpRecoverable, PollingError } from \"../errors\";\nimport { IDataSynchronizer } from \"./IDataSynchronizer\";\nimport { ILogger } from \"../logging/ILogger\";\nimport Configuration from \"../Configuration\";\nimport { EventName, PollingErrorHandler, ProcessStreamResponse, StreamResponseEventType } from \"./types\";\nimport Requestor from \"./Requestor\";\nimport { httpErrorMessage } from \"../utils/http\";\nimport { IUser } from \"../options/IUser\";\n\nexport default class PollingDataSynchronizer implements IDataSynchronizer {\n  private stopped = false;\n\n  private logger?: ILogger;\n\n  private pollingInterval: number;\n\n  private user: IUser | undefined;\n\n  private timeoutHandle: any;\n\n  constructor(\n    config: Configuration,\n    private readonly requestor: Requestor,\n    private readonly getStoreTimestamp: () => number,\n    private readonly listeners: Map<EventName, ProcessStreamResponse>,\n    private readonly errorHandler?: PollingErrorHandler,\n  ) {\n    this.logger = config.logger;\n    this.pollingInterval = config.pollingInterval;\n    this.user = config.user;\n  }\n\n  private poll() {\n    if (this.stopped) {\n      return;\n    }\n\n    const startTime = Date.now();\n    this.logger?.debug('Polling for feature flag and segments updates');\n    this.requestor.requestData(this.getStoreTimestamp(), this.user, (err, body) => {\n      const elapsed = Date.now() - startTime;\n      const sleepFor = Math.max(this.pollingInterval - elapsed, 0);\n\n      this.logger?.debug('Elapsed: %d ms, sleeping for %d ms', elapsed, sleepFor);\n      if (err) {\n        const {status} = err;\n        if (status && !isHttpRecoverable(status)) {\n          const message = httpErrorMessage(err, 'polling request');\n          this.logger?.error(message);\n          this.errorHandler?.(new PollingError(message, status));\n          // It is not recoverable, return and do not trigger another\n          // poll.\n          return;\n        }\n        this.logger?.warn(httpErrorMessage(err, 'polling request', 'will retry'));\n      } else {\n        let featureFlags = [];\n        let userKeyId = this.user?.keyId!;\n        let processStreamResponse: ProcessStreamResponse | undefined = this.listeners.get('patch');\n\n        if (body) {\n          const message = JSON.parse(body);\n          if (message.messageType === 'data-sync') {\n            switch (message.data.eventType) {\n              case StreamResponseEventType.patch:\n                processStreamResponse = this.listeners.get('patch');\n                break;\n              case StreamResponseEventType.full:\n                processStreamResponse = this.listeners.get('put');\n                break;\n            }\n\n            ({featureFlags, userKeyId} = message.data);\n          }\n        }\n\n        const data = processStreamResponse?.deserializeData?.(featureFlags);\n        processStreamResponse?.processJson?.(userKeyId, data);\n      }\n\n      // Falling through, there was some type of error and we need to trigger\n      // a new poll.\n      this.timeoutHandle = setTimeout(() => {\n        this.poll();\n      }, sleepFor);\n    });\n  }\n\n  identify(user: IUser) {\n    this.user = {...user};\n  }\n\n  close(): void {\n    this.stop();\n  }\n\n  start(): void {\n    this.poll();\n  }\n\n  stop(): void {\n    if (this.timeoutHandle) {\n      clearTimeout(this.timeoutHandle);\n      this.timeoutHandle = undefined;\n    }\n    this.stopped = true;\n  }\n}\n\n\n\n","import { IRequestor } from \"./IRequestor\";\nimport Configuration from \"../Configuration\";\nimport { IInfo } from \"../platform/IInfo\";\nimport { IRequestOptions, IRequests, IResponse } from \"../platform/requests\";\nimport { StreamingError } from \"../errors\";\nimport { defaultHeaders } from \"../utils/http\";\n\n/**\n * @internal\n */\nexport default class Requestor implements IRequestor {\n  private readonly headers: Record<string, string>;\n\n  private readonly uri: string;\n\n  constructor(\n    sdkKey: string,\n    config: Configuration,\n    info: IInfo,\n    private readonly requests: IRequests,\n  ) {\n    this.headers = defaultHeaders(sdkKey, info);\n    this.uri = config.pollingUri;\n  }\n\n  /**\n   * Perform a request and utilize the ETag cache. The ETags are cached in the\n   * requestor instance.\n   */\n  private async request(\n    requestUrl: string,\n    options: IRequestOptions,\n  ): Promise<{\n    res: IResponse;\n    body: string;\n  }> {\n    const res = await this.requests.fetch(requestUrl, options);\n\n    const body = await res.text();\n\n    return {res, body};\n  }\n\n  async requestData(timestamp: number, payload: any, cb: (err: any, body: any) => void) {\n    const options: IRequestOptions = {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify(payload)\n    };\n    try {\n      const {res, body} = await this.request(`${ this.uri }?timestamp=${ timestamp ?? 0 }`, options);\n      if (res.status !== 200 && res.status !== 304) {\n        const err = new StreamingError(`Unexpected status code: ${ res.status }`, res.status);\n        return cb(err, undefined);\n      }\n      return cb(undefined, res.status === 304 ? null : body);\n    } catch (err) {\n      return cb(err, undefined);\n    }\n  }\n}\n","import { IDataSynchronizer } from \"./IDataSynchronizer\";\nimport ClientContext from \"../options/ClientContext\";\nimport { EventName, ProcessStreamResponse } from \"./types\";\nimport { ILogger } from \"../logging/ILogger\";\nimport { IWebSocketWithEvents } from \"../platform/IWebSocket\";\nimport { IUser } from \"../options/IUser\";\n\nclass WebSocketDataSynchronizer implements IDataSynchronizer {\n  private socket?: IWebSocketWithEvents;\n  private readonly logger?: ILogger;\n\n  private connectionAttemptStartTime?: number;\n\n  constructor(\n    sdkKey: string,\n    user: IUser,\n    clientContext: ClientContext,\n    socket: IWebSocketWithEvents,\n    private readonly getStoreTimestamp: () => number,\n    private readonly listeners: Map<EventName, ProcessStreamResponse>,\n    webSocketPingInterval: number\n  ) {\n    const {logger, streamingUri} = clientContext;\n\n    this.logger = logger;\n    this.socket = socket;\n    this.socket.config({\n      sdkKey,\n      streamingUri,\n      pingInterval: webSocketPingInterval,\n      user,\n      logger,\n      getStoreTimestamp\n    });\n\n    this.listeners.forEach(({deserializeData, processJson}, eventName) => {\n      this.socket?.addListener(eventName, (event) => {\n        this.logger?.debug(`Received ${ eventName } event`);\n\n        if (event?.data) {\n          const {featureFlags, userKeyId} = event.data;\n          const data = deserializeData(featureFlags);\n          processJson(userKeyId, data);\n        }\n      });\n    })\n  }\n\n  identify(user: IUser): void {\n    this.socket?.identify(user);\n  }\n\n  start(): void {\n    this.logConnectionStarted();\n\n    this.socket?.connect();\n  }\n\n  private logConnectionStarted() {\n    this.connectionAttemptStartTime = Date.now();\n    this.logger?.info(`Stream connection attempt StartTime ${ this.connectionAttemptStartTime }`);\n  }\n\n  close(): void {\n    this.stop();\n  }\n\n  stop(): void {\n    this.socket?.close();\n    this.socket = undefined;\n  }\n}\n\nexport default WebSocketDataSynchronizer;","export * from './DataSyncMode';\nexport * from './IDataSynchronizer';\nexport * from './IRequestor';\nexport * from './NullDataSynchronizer';\nexport * from './PollingDataSynchronizer';\nexport * from './Requestor';\nexport * from './types';\nexport * from './utils';\nexport * from './WebSocketDataSynchronizer';","import { PollingError } from \"../errors\";\nimport { IFlag } from \"../evaluation/data/IFlag\";\n\nexport type PollingErrorHandler = (err: PollingError) => void;\n\nexport enum StreamResponseEventType {\n  full = 'full',\n  patch = 'patch'\n}\n\nexport interface IStreamResponse {\n  eventType: StreamResponseEventType,\n  featureFlags: IFlag[]\n}\n\nexport type EventName = 'delete' | 'patch' | 'ping' | 'put';\nexport type ProcessStreamResponse = {\n  deserializeData: (flags: IFlag[]) => any;\n  processJson: (userKeyId: string, json: any) => void;\n};","/********************** encode text begin *****************************/\nconst alphabet: Record<string, string> = {\n  \"0\": \"Q\",\n  \"1\": \"B\",\n  \"2\": \"W\",\n  \"3\": \"S\",\n  \"4\": \"P\",\n  \"5\": \"H\",\n  \"6\": \"D\",\n  \"7\": \"X\",\n  \"8\": \"Z\",\n  \"9\": \"U\",\n}\n\nfunction encodeNumber(param: number, length: number): string {\n  var s = \"000000000000\" + param;\n  const numberWithLeadingZeros = s.slice(s.length - length);\n  return numberWithLeadingZeros.split('').map(n => alphabet[n]).join('');\n}\n\n// generate connection token\nexport function generateConnectionToken(text: string): string {\n  text = text.replace(/=*$/, '');\n  const timestamp = Date.now();\n  const timestampCode = encodeNumber(timestamp, timestamp.toString().length);\n  // get random number less than the length of the text as the start point, and it must be greater or equal to 2\n  const start = Math.max(Math.floor(Math.random() * text.length), 2);\n\n  return `${ encodeNumber(start, 3) }${ encodeNumber(timestampCode.length, 2) }${ text.slice(0, start) }${ timestampCode }${ text.slice(start) }`;\n}\n\n/********************** encode text end *****************************/","export class PollingError extends Error {\n  public readonly status?: number;\n\n  constructor(message: string, status?: number) {\n    super(message);\n    this.status = status;\n    this.name = 'FbPollingError';\n  }\n}\n\nexport class StreamingError extends Error {\n  public readonly code?: number;\n\n  constructor(message: string, code?: number) {\n    super(message);\n    this.code = code;\n    this.name = 'FbStreamingError';\n  }\n}\n\nexport class UnexpectedResponseError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'FbUnexpectedResponseError';\n  }\n}\n\n\nexport class ClientError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'FbClientError';\n  }\n}\n\nexport class TimeoutError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'FeatBitTimeoutError';\n  }\n}\n\nexport function isHttpRecoverable(status: number) {\n  if (status >= 400 && status < 500) {\n    return status === 400 || status === 408 || status === 429;\n  }\n  return true;\n}","import { ReasonKinds } from \"./ReasonKinds\";\nimport { IFlag } from \"./data/IFlag\";\nimport { EvalEvent } from \"../events/event\";\nimport { IUser } from \"../options/IUser\";\n\n/**\n * A class which encapsulates the result of an evaluation. It allows for differentiating between\n * successful and error result types.\n *\n * @internal\n */\nexport default class EvalResult {\n  protected constructor(\n    public kind: ReasonKinds,\n    public value: IFlag | null,\n    public reason?: string,\n  ) {\n  }\n\n  static flagNotFound(flagKey: string) {\n    return new EvalResult(ReasonKinds.FlagNotFound, null, `flag not found: ${ flagKey }`);\n  }\n\n  static matched(val: IFlag) {\n    return new EvalResult(ReasonKinds.Match, val, 'target match');\n  }\n\n  toEvalEvent(user: IUser): EvalEvent | null {\n    if (this.kind !== ReasonKinds.Match) {\n      return null;\n    }\n\n    const targetedVariation = this.value?.variations.find(v => v.value === this.value?.variation);\n    return new EvalEvent(user, this.value?.id!, targetedVariation!, this.value?.sendToExperiment!);\n  }\n}","import { IFlag } from \"./data/IFlag\";\nimport EvalResult from \"./EvalResult\";\nimport { IStore } from \"../platform/IStore\";\nimport DataKinds from \"../store/DataKinds\";\n\n/**\n * @internal\n */\nexport default class Evaluator {\n  constructor(private store: IStore) {\n  }\n\n  /**\n   * Evaluate the given flag against the given context.\n   * @param flagKey The key of the feature flag.\n   */\n  evaluate(\n    flagKey: string,\n  ): EvalResult {\n    const flag = this.store.get(DataKinds.Flags, flagKey) as unknown as IFlag;\n    if (!flag) {\n      return EvalResult.flagNotFound(flagKey);\n    }\n\n    return EvalResult.matched(flag);\n  }\n}","/**\n * Different kinds of error which may be encountered during evaluation.\n */\nexport enum ReasonKinds {\n  ClientNotReady = 'ClientNotReady',\n  Match = 'Match',\n  WrongType = 'WrongType',\n  FlagNotFound = 'FlagNotFound',\n  Error = 'Error'\n}","export type FlagValue = any;\n\nexport enum VariationDataType {\n  string = 'string',\n  boolean = 'boolean',\n  number = 'number',\n  json = 'json',\n  empty = ''\n}\n\nexport interface IVariation {\n  id: number,\n  value: FlagValue\n}\n\nexport interface IFlagBase {\n  id: string, // the key\n  variation: FlagValue,\n  variationType: VariationDataType,\n  sendToExperiment?: boolean,\n  timestamp?: number,\n  variationOptions?: IVariation[],\n}\n\nexport interface IFlag extends IFlagBase {\n  key: string, // the same value to id\n  variations: IVariation[],// the same value to variationOptions\n  version: number\n}\n","export * from './IFlag';","export * from './data';\nexport * from './EvalResult';\nexport * from './Evaluator';\nexport * from './IEvalDetail';\nexport * from './ReasonKinds';","import { IEventProcessor } from \"./IEventProcessor\";\nimport { EventDispatcher } from \"./EventDispatcher\";\nimport ClientContext from \"../options/ClientContext\";\nimport { FlushEvent, IEvent, ShutdownEvent } from \"./event\";\nimport { isNullOrUndefined } from \"../utils/isNullOrUndefined\";\nimport { IEventQueue } from \"./IEventQueue\";\nimport { DefaultEventQueue } from \"./DefaultEventQueue\";\nimport { ILogger } from \"../logging/ILogger\";\n\nexport class DefaultEventProcessor implements IEventProcessor {\n  private readonly logger: ILogger;\n  private readonly flushInterval: number;\n  private readonly eventDispatcher: EventDispatcher;\n  private readonly eventQueue: IEventQueue;\n  private closed: boolean = false;\n\n  constructor(clientContext: ClientContext) {\n    const {logger, flushInterval, maxEventsInQueue} = clientContext;\n    this.logger = logger!;\n    this.flushInterval = flushInterval;\n    this.eventQueue = new DefaultEventQueue(maxEventsInQueue, this.logger);\n    this.eventDispatcher = new EventDispatcher(clientContext, this.eventQueue);\n\n    this.flushLoop();\n  }\n\n  private flushLoop() {\n    if (this.closed) {\n      return;\n    }\n\n    setTimeout(async () => {\n      try {\n        await this.flush();\n      } catch (err) {\n        this.logger.error('Unexpected error while flushing events in event processor.', err);\n      }\n\n      this.flushLoop();\n    }, this.flushInterval);\n  }\n\n  flush(): Promise<any> {\n    const flushEvent = new FlushEvent();\n    this.record(flushEvent);\n    return flushEvent.waitForCompletion();\n  }\n\n  async close(): Promise<void> {\n    if (this.closed) {\n      return;\n    }\n\n    // send a shutdown event to dispatcher\n    const shutdown = new ShutdownEvent();\n    this.record(shutdown);\n\n    try {\n      await shutdown.waitForCompletion();\n    } catch (err) {\n      this.logger.error('Event processor shutdown but not complete.');\n    }\n\n    // mark the event queue as complete for adding\n    this.eventQueue.close();\n    this.closed = true;\n  }\n\n  record(event: IEvent | null): boolean {\n    if (isNullOrUndefined(event)) {\n      return false;\n    }\n\n    if (!this.eventQueue.addEvent(event!)) {\n      if (event instanceof FlushEvent) {\n        event.complete();\n      }\n\n      return false;\n    }\n\n    return true;\n  }\n}","import { IEventQueue } from \"./IEventQueue\";\nimport { IEvent } from \"./event\";\nimport { ILogger } from \"../logging/ILogger\";\n\nexport class DefaultEventQueue implements IEventQueue {\n  private events: IEvent[];\n  private closed: boolean = false;\n\n  constructor(private readonly capacity: number, private readonly logger: ILogger) {\n    this.events = [];\n  }\n\n  addEvent(event: IEvent): boolean {\n    if (this.closed) {\n      return false;\n    }\n\n    if (this.events.length >= this.capacity) {\n      this.logger.warn(\"Events are being produced faster than they can be processed. We shouldn't see this.\");\n      return false;\n    }\n\n    this.events.push(event);\n    return true;\n  }\n\n  clear(): void {\n    this.events = [];\n  }\n\n  shift(): IEvent | undefined {\n    return this.events.shift();\n  }\n\n  close(): void {\n    this.closed = true;\n  }\n\n  get eventsSnapshot(): IEvent[] {\n    return [...this.events];\n  }\n\n  get length(): number {\n    return this.events.length;\n  }\n\n  get isEmpty(): boolean {\n    return this.length === 0;\n  }\n}","import { DeliveryStatus, IEventSender, IEventSenderResult } from \"./IEventSender\";\nimport ClientContext from \"../options/ClientContext\";\nimport { defaultHeaders, httpErrorMessage } from \"../utils/http\";\nimport { IRequests } from \"../platform/requests\";\nimport { isHttpRecoverable, UnexpectedResponseError } from \"../errors\";\nimport sleep from \"../utils/sleep\";\n\nexport class DefaultEventSender implements IEventSender {\n  private readonly defaultHeaders: {\n    [key: string]: string;\n  };\n  private readonly eventsUri: string;\n  private requests: IRequests;\n\n  constructor(clientContext: ClientContext) {\n    const {\n      sdkKey,\n      eventsUri,\n      platform\n    } = clientContext;\n\n    const {info, requests} = platform;\n    this.defaultHeaders = defaultHeaders(sdkKey, info);\n    this.eventsUri = eventsUri;\n    this.requests = requests;\n  }\n\n  async send(payload: string, retry: boolean): Promise<IEventSenderResult> {\n    const res: IEventSenderResult = {\n      status: DeliveryStatus.Succeeded,\n    };\n\n    const headers: Record<string, string> = {\n      ...this.defaultHeaders,\n    }\n\n    let error;\n    try {\n      const {status} = await this.requests.fetch(this.eventsUri, {\n        headers,\n        body: payload,\n        method: 'POST',\n      });\n\n      if (status >= 200 && status <= 299) {\n        return res;\n      }\n\n      error = new UnexpectedResponseError(\n        httpErrorMessage({status, message: 'some events were dropped'}, 'event posting'),\n      );\n\n      if (!isHttpRecoverable(status)) {\n        res.status = DeliveryStatus.FailedAndMustShutDown;\n        res.error = error;\n        return res;\n      }\n    } catch (err) {\n      error = err;\n    }\n\n    // recoverable but not retrying\n    if (error && !retry) {\n      res.status = DeliveryStatus.Failed;\n      res.error = error;\n      return res;\n    }\n\n    // wait 1 second before retrying\n    await sleep();\n\n    return this.send(payload, false);\n  }\n}","import { IEventSerializer } from \"./EventSerializer\";\nimport { EvalEvent, IEvent, MetricEvent } from \"./event\";\n\nexport class DefaultEventSerializer implements IEventSerializer {\n  serialize(events: IEvent[]): string {\n    const payload = events\n      .map(event => event instanceof EvalEvent || event instanceof MetricEvent ? event.toPayload() : null)\n      .filter(event => event !== null);\n\n    return JSON.stringify(payload);\n  }\n}","import { ILogger } from \"../logging/ILogger\";\nimport ClientContext from \"../options/ClientContext\";\nimport { DeliveryStatus, IEventSender } from \"./IEventSender\";\nimport { IEventQueue } from \"./IEventQueue\";\nimport { DefaultEventQueue } from \"./DefaultEventQueue\";\nimport { DefaultEventSender } from \"./DefaultEventSender\";\nimport { AsyncEvent, FlushEvent, IEvent, PayloadEvent, ShutdownEvent } from \"./event\";\nimport { IEventSerializer } from \"./EventSerializer\";\nimport { DefaultEventSerializer } from \"./DefaultEventSerializer\";\nimport sleep from \"../utils/sleep\";\n\nexport class EventDispatcher {\n  private readonly logger: ILogger;\n  private sender: IEventSender;\n  private buffer: IEventQueue;\n  private serializer: IEventSerializer;\n\n  private maxEventPerRequest = 50;\n  private stopped: boolean = false;\n\n  constructor(clientContext: ClientContext, queue: IEventQueue) {\n    const {logger, maxEventsInQueue} = clientContext;\n    this.logger = logger!;\n\n    this.buffer = new DefaultEventQueue(maxEventsInQueue, this.logger);\n    this.sender = new DefaultEventSender(clientContext);\n    this.serializer = new DefaultEventSerializer();\n\n    this.dispatchLoop(queue).then();\n  }\n\n  private async dispatchLoop(queue: IEventQueue) {\n    this.logger.debug('Start dispatch loop.');\n\n    let running = true;\n    while (running) {\n      try {\n        const event = queue.shift();\n\n        if (event === undefined) {\n          await sleep(1000);\n          continue;\n        }\n\n        if (event instanceof PayloadEvent) {\n          this.addEventToBuffer(event);\n        } else if (event instanceof FlushEvent) {\n          await this.triggerFlush(event);\n        } else if (event instanceof ShutdownEvent) {\n          await this.triggerFlush(event);\n          this.stopped = true;\n          running = false;\n        }\n      } catch (err) {\n        this.logger.error('Unexpected error in event dispatcher.', err);\n      }\n    }\n\n    this.logger.debug('Finish dispatch loop.');\n  }\n\n  private addEventToBuffer(event: IEvent) {\n    if (this.stopped) {\n      return;\n    }\n\n    if (this.buffer.addEvent(event)) {\n      this.logger.debug('Added event to buffer.');\n    } else {\n      this.logger.warn('Exceeded event queue capacity, event will be dropped. Increase capacity to avoid dropping events.');\n    }\n  }\n\n  private async triggerFlush(event: AsyncEvent) {\n    if (this.stopped) {\n      event.complete();\n      return;\n    }\n\n    if (this.buffer.isEmpty) {\n      event.complete();\n      this.logger.debug('Flush empty buffer.');\n      // There are no events to flush. If we don't complete the message, then the async task may never\n      // complete (if it had a non-zero positive timeout, then it would complete after the timeout).\n      return;\n    }\n\n    const snapshot = this.buffer.eventsSnapshot;\n    this.buffer.clear();\n    try {\n      await this.flushEvents(snapshot);\n      this.logger.debug(`${ snapshot.length } events has been flushed.`);\n    } catch (err) {\n      this.logger.warn('Exception happened when flushing events', err);\n    }\n\n    event.complete();\n  }\n\n  private async flushEvents(events: IEvent[]) {\n    events = this.getUniqueEvents(events);\n    const total = events.length;\n    for (let i = 0; i < total; i += this.maxEventPerRequest) {\n      const length = Math.min(this.maxEventPerRequest, total - i);\n      const slice = events.slice(i, i + length);\n      const payload = this.serializer.serialize(slice);\n\n      const {status} = await this.sender.send(payload, true);\n      if (status === DeliveryStatus.FailedAndMustShutDown) {\n        this.stopped = true;\n      }\n    }\n  }\n\n  private getUniqueEvents(events: IEvent[]): IEvent[] {\n    const uniqueEvents: IEvent[] = [];\n    const hashes: string[] = [];\n\n    for (const event of events) {\n      if (!hashes.includes(event.hash)) {\n        uniqueEvents.push(event);\n        hashes.push(event.hash);\n      }\n    }\n\n    return uniqueEvents;\n  }\n}","export enum DeliveryStatus {\n  Succeeded,\n  Failed,\n  FailedAndMustShutDown\n}\n\nexport interface IEventSenderResult {\n  status: DeliveryStatus,\n  error?: any\n}\n\nexport interface IEventSender {\n  send(payload: string, retry: boolean): Promise<IEventSenderResult>;\n}","import { IEventProcessor } from \"./IEventProcessor\";\nimport { IEvent } from \"./event\";\n\nexport class NullEventProcessor implements IEventProcessor {\n  flush(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  close(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  record(event: IEvent | null): boolean {\n    return false;\n  }\n}","import { IUser } from \"../options/IUser\";\nimport { IVariation } from \"../evaluation/data/IFlag\";\n\nexport interface IEvent {\n  hash: string;\n}\n\nexport class AsyncEvent implements IEvent {\n  private readonly isCompletedPromise?: Promise<AsyncEvent>;\n  private resolveFn?: (value: AsyncEvent) => void;\n  timestamp = (new Date()).getTime();\n\n  get hash(): string {\n    return this.timestamp.toString();\n  }\n\n  constructor() {\n    this.isCompletedPromise = new Promise<AsyncEvent>((resolve) => {\n      this.resolveFn = resolve;\n    });\n  }\n\n  waitForCompletion(): Promise<AsyncEvent> {\n    return this.isCompletedPromise!;\n  }\n\n  complete() {\n    this.resolveFn?.(this);\n  }\n}\n\nexport class FlushEvent extends AsyncEvent {\n}\n\nexport class ShutdownEvent extends AsyncEvent {\n}\n\nexport class PayloadEvent implements IEvent {\n  timestamp = (new Date()).getTime();\n\n  get hash(): string {\n    return this.timestamp.toString();\n  }\n\n  toPayload(): any {\n  };\n}\n\nexport class MetricEvent extends PayloadEvent {\n  constructor(\n    public user: IUser,\n    public eventName: string,\n    public appType: string,\n    public metricValue: number\n  ) {\n    super();\n  }\n\n  private userPayload() {\n    return {\n      keyId: this.user.keyId,\n      name: this.user.name,\n      customizedProperties: this.user.customizedProperties\n    }\n  }\n\n  toPayload(): any {\n    return {\n      user: this.userPayload(),\n      metrics: [{\n        route: 'index/metric',\n        timestamp: this.timestamp,\n        numericValue: this.metricValue,\n        appType: this.appType,\n        eventName: this.eventName,\n        type: 'CustomEvent'\n      }]\n    }\n  }\n\n  get hash(): string {\n    const payload = this.toPayload();\n    const hasObject = {\n      user: payload.user,\n      metrics: payload.metrics.map((m: any) => ({...m, timestamp: undefined}))\n    }\n    return JSON.stringify(hasObject);\n  }\n}\n\nexport class EvalEvent extends PayloadEvent {\n  constructor(\n    public user: IUser,\n    public flagKey: string,\n    public variation: IVariation,\n    public sendToExperiment: boolean\n  ) {\n    super();\n  }\n\n  private userPayload() {\n    return {\n      keyId: this.user.keyId,\n      name: this.user.name,\n      customizedProperties: this.user.customizedProperties\n    }\n  }\n\n  toPayload(): any {\n    return {\n      user: this.userPayload(),\n      variations: [{\n        featureFlagKey: this.flagKey,\n        sendToExperiment: this.sendToExperiment,\n        timestamp: this.timestamp,\n        variation: this.variation\n      }]\n    }\n  }\n\n  get hash(): string {\n    const payload = this.toPayload();\n    const hasObject = {\n      user: payload.user,\n      variations: payload.variations.map((m: any) => ({...m, timestamp: undefined}))\n    }\n\n    return JSON.stringify(hasObject);\n  }\n}","export * from './DefaultEventProcessor';\nexport * from './DefaultEventQueue';\nexport * from './DefaultEventSender';\nexport * from './DefaultEventSerializer';\nexport * from './event';\nexport * from './EventDispatcher';\nexport * from './EventSerializer';\nexport * from './IEventProcessor';\nexport * from './IEventQueue';\nexport * from './IEventSender';\nexport * from './NullEventProcessor';\n","export * from './bootstrap';\nexport * from './data-sources';\nexport * from './evaluation';\nexport * from './events';\nexport * from './logging';\nexport * from './options';\nexport * from './platform';\nexport * from './store';\nexport * from './data-sync';\nexport * from './utils';\n\nexport * from './Configuration';\nexport * from './constants';\nexport * from './Context';\nexport * from './errors';\nexport * from './FbClientBuilder';\nexport * from './IContextProperty';\nexport * from './IDataKind';\nexport * from './IFbClient';\nexport * from './IVersionedData';\nexport * from './FbClientCore';\n\n","import format from './format';\nimport { ILogger } from \"./ILogger\";\nimport { IBasicLoggerOptions } from \"./IBasicLoggerOptions\";\n\nconst LogPriority = {\n  debug: 0,\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\nconst LevelNames = ['debug', 'info', 'warn', 'error', 'none'];\n\n/**\n * A basic logger which handles filtering by level.\n *\n * With the default options it will write to `console.error`\n * and it will use the formatting provided by `console.error`.\n * If the destination is overwritten, then it will use an included\n * formatter similar to `util.format`.\n *\n * If a formatter is available, then that should be overridden\n * as well for performance.\n */\nexport class BasicLogger implements ILogger {\n  private logLevel: number;\n\n  private name: string;\n\n  private destination?: (line: string) => void;\n\n  private formatter?: (...args: any[]) => string;\n\n  /**\n   * This should only be used as a default fallback and not as a convenient\n   * solution. In most cases you should construct a new instance with the\n   * appropriate options for your specific needs.\n   */\n  static get() {\n    return new BasicLogger({});\n  }\n\n  constructor(options: IBasicLoggerOptions) {\n    this.logLevel = LogPriority[options.level ?? 'info'] ?? LogPriority.info;\n    this.name = options.name ?? 'FeatBit';\n    // eslint-disable-next-line no-console\n    this.destination = options.destination;\n    this.formatter = options.formatter;\n  }\n\n  private tryFormat(...args: any[]): string {\n    try {\n      if (this.formatter) {\n        // In case the provided formatter fails.\n        return this.formatter?.(...args);\n      }\n      return format(...args);\n    } catch {\n      return format(...args);\n    }\n  }\n\n  private tryWrite(msg: string) {\n    try {\n      this.destination!(msg);\n    } catch {\n      // eslint-disable-next-line no-console\n      console.error(msg);\n    }\n  }\n\n  private log(level: number, args: any[]) {\n    if (level >= this.logLevel) {\n      const prefix = `${ LevelNames[level] }: [${ this.name }]`;\n      try {\n        if (this.destination) {\n          this.tryWrite(`${ prefix } ${ this.tryFormat(...args) }`);\n        } else {\n          // `console.error` has its own formatter.\n          // So we don't need to do anything.\n          // eslint-disable-next-line no-console\n          console.error(...args);\n        }\n      } catch {\n        // If all else fails do not break.\n        // eslint-disable-next-line no-console\n        console.error(...args);\n      }\n    }\n  }\n\n  error(...args: any[]): void {\n    this.log(LogPriority.error, args);\n  }\n\n  warn(...args: any[]): void {\n    this.log(LogPriority.warn, args);\n  }\n\n  info(...args: any[]): void {\n    this.log(LogPriority.info, args);\n  }\n\n  debug(...args: any[]): void {\n    this.log(LogPriority.debug, args);\n  }\n}\n","import { ILogger } from \"./ILogger\";\nimport { TypeValidators } from \"../options/Validators\";\n\nconst loggerRequirements = {\n  error: TypeValidators.Function,\n  warn: TypeValidators.Function,\n  info: TypeValidators.Function,\n  debug: TypeValidators.Function,\n};\n\n/**\n * The safeLogger logic exists because we allow the application to pass in a custom logger, but\n * there is no guarantee that the logger works correctly and if it ever throws exceptions there\n * could be serious consequences (e.g. an uncaught exception within an error event handler, due\n * to the SDK trying to log the error, can terminate the application). An exception could result\n * from faulty logic in the logger implementation, or it could be that this is not a logger at\n * all but some other kind of object; the former is handled by a catch block that logs an error\n * message to the SDK's default logger, and we can at least partly guard against the latter by\n * checking for the presence of required methods at configuration time.\n */\nexport class SafeLogger implements ILogger {\n  private logger: ILogger;\n\n  private fallback: ILogger;\n\n  /**\n   * Construct a safe logger with the specified logger.\n   * @param logger The logger to use.\n   * @param fallback A fallback logger to use in case an issue is  encountered using\n   * the provided logger.\n   */\n  constructor(logger: ILogger, fallback: ILogger) {\n    Object.entries(loggerRequirements).forEach(([level, validator]) => {\n      if (!validator.is((logger as any)[level])) {\n        throw new Error(`Provided logger instance must support logger.${ level }(...) method`);\n        // Note that the SDK normally does not throw exceptions to the application, but that rule\n        // does not apply to FbClientNode.init() which will throw an exception if the parameters are so\n        // invalid that we cannot proceed with creating the client. An invalid logger meets those\n        // criteria since the SDK calls the logger during nearly all of its operations.\n      }\n    });\n    this.logger = logger;\n    this.fallback = fallback;\n  }\n\n  private log(level: 'error' | 'warn' | 'info' | 'debug', args: any[]) {\n    try {\n      this.logger[level](...args);\n    } catch {\n      // If all else fails do not break.\n      this.fallback[level](...args);\n    }\n  }\n\n  error(...args: any[]): void {\n    this.log('error', args);\n  }\n\n  warn(...args: any[]): void {\n    this.log('warn', args);\n  }\n\n  info(...args: any[]): void {\n    this.log('info', args);\n  }\n\n  debug(...args: any[]): void {\n    this.log('debug', args);\n  }\n}","import { TypeValidators } from \"../options/Validators\";\n\n\n/**\n * Attempt to produce a string representation of a value.\n * The format should be roughly comparable to `util.format`\n * aside from object which will be JSON versus the `util.inspect`\n * format.\n * @param val\n * @returns A string representation of the value if possible.\n */\nfunction tryStringify(val: any) {\n  if (typeof val === 'string') {\n    return val;\n  }\n  if (val === undefined) {\n    return 'undefined';\n  }\n  if (val === null) {\n    return 'null';\n  }\n  if (Object.prototype.hasOwnProperty.call(val, 'toString')) {\n    try {\n      return val.toString();\n    } catch {\n      /* Keep going */\n    }\n  }\n\n  if (typeof val === 'bigint') {\n    return `${ val }n`;\n  }\n  try {\n    return JSON.stringify(val);\n  } catch (error) {\n    if (error instanceof TypeError && error.message.indexOf('circular') >= 0) {\n      return '[Circular]';\n    }\n    return '[Not Stringifiable]';\n  }\n}\n\n/**\n * Attempt to produce a numeric representation.\n * BigInts have an `n` suffix.\n * @param val\n * @returns The numeric representation or 'NaN' if not numeric.\n */\nfunction toNumber(val: any): string {\n  // Symbol has to be treated special because it will\n  // throw an exception if an attempt is made to convert it.\n  if (typeof val === 'symbol') {\n    return 'NaN';\n  }\n  if (typeof val === 'bigint') {\n    return `${ val }n`;\n  }\n  return String(Number(val));\n}\n\n/**\n * Attempt to produce an integer representation.\n * BigInts have an `n` suffix.\n * @param val\n * @returns The integer representation or 'NaN' if not numeric.\n */\nfunction toInt(val: any): string {\n  if (typeof val === 'symbol') {\n    return 'NaN';\n  }\n  if (typeof val === 'bigint') {\n    return `${ val }n`;\n  }\n  return String(parseInt(val, 10));\n}\n\n/**\n * Attempt to produce a float representation.\n * BigInts have an `n` suffix.\n * @param val\n * @returns The integer representation or 'NaN' if not numeric.\n */\nfunction toFloat(val: any): string {\n  if (typeof val === 'symbol') {\n    return 'NaN';\n  }\n  return String(parseFloat(val));\n}\n\n// Based on:\n// https://nodejs.org/api/util.html#utilformatformat-args\n// The result will not match browser exactly, but it should get the\n// right information through.\nconst escapes: Record<string, (val: any) => string> = {\n  s: (val: any) => tryStringify(val),\n  d: (val: any) => toNumber(val),\n  i: (val: any) => toInt(val),\n  f: (val: any) => toFloat(val),\n  j: (val: any) => tryStringify(val),\n  o: (val: any) => tryStringify(val),\n  O: (val: any) => tryStringify(val),\n  c: () => '',\n};\n\n/**\n * A basic formatted for use where `util.format` is not available.\n * This will not be as performant, but it will produce formatted\n * messages.\n *\n * @internal\n *\n * @param args\n * @returns Formatted string.\n */\nexport default function format(...args: any[]): string {\n  const formatString = args.shift();\n  if (TypeValidators.String.is(formatString)) {\n    let out = '';\n    let i = 0;\n    while (i < formatString.length) {\n      const char = formatString.charAt(i);\n      if (char === '%') {\n        const nextIndex = i + 1;\n        if (nextIndex < formatString.length) {\n          const nextChar = formatString.charAt(i + 1);\n          if (nextChar in escapes && args.length) {\n            const value = args.shift();\n            // This rule is for math.\n            // eslint-disable-next-line no-unsafe-optional-chaining\n            out += escapes[nextChar]?.(value);\n          } else if (nextChar === '%') {\n            out += '%';\n          } else {\n            out += `%${ nextChar }`;\n          }\n          i += 2;\n        }\n      } else {\n        out += char;\n        i += 1;\n      }\n    }\n    // If there are any args left after we exhaust the format string\n    // then just stick those on the end.\n    if (args.length) {\n      if (out.length) {\n        out += ' ';\n      }\n      out += args.map(tryStringify).join(' ');\n    }\n    return out;\n  }\n  return args.map(tryStringify).join(' ');\n}\n","export * from './BasicLogger';\nexport * from './format';\nexport * from './IBasicLoggerOptions';\nexport * from './ILogger';\nexport * from './LogLevel';\nexport * from './SafeLogger';","import { ILogger } from \"../logging/ILogger\";\nimport { IPlatform } from \"../platform/IPlatform\";\nimport { IClientContext } from \"./IClientContext\";\nimport { IUser } from \"./IUser\";\n\n/**\n * The client context provides basic configuration and platform support which are required\n * when building SDK components.\n */\nexport default class ClientContext implements IClientContext {\n  flushInterval: number;\n  maxEventsInQueue: number;\n  offline: boolean;\n  logger: ILogger;\n  eventsUri: string;\n  pollingUri: string;\n  streamingUri: string;\n\n  constructor(\n    public readonly sdkKey: string,\n    configuration: {\n      logger?: ILogger;\n      offline?: boolean;\n      flushInterval: number;\n      maxEventsInQueue: number;\n      streamingUri: string;\n      pollingUri: string;\n      eventsUri: string;\n    },\n    public readonly platform: IPlatform,\n  ) {\n    this.logger = configuration.logger!;\n    this.offline = configuration.offline!;\n    this.flushInterval = configuration.flushInterval;\n    this.maxEventsInQueue = configuration.maxEventsInQueue;\n    this.streamingUri = configuration.streamingUri;\n    this.pollingUri = configuration.pollingUri;\n    this.eventsUri = configuration.eventsUri;\n  }\n}","/**\n * Messages for issues which can be encountered from processing the configuration options.\n */\nexport default class OptionMessages {\n  static optionBelowMinimum(name: string, value: number, min: number): string {\n    return `Config option \"${ name }\" had invalid value of ${ value }, using minimum of ${ min } instead`;\n  }\n\n  static unknownOption(name: string): string {\n    return `Ignoring unknown config option \"${ name }\"`;\n  }\n\n  static wrongOptionType(name: string, expectedType: string, actualType: string): string {\n    return `Config option \"${ name }\" should be of type ${ expectedType }, got ${ actualType }, using default value`;\n  }\n\n  static wrongOptionTypeBoolean(name: string, actualType: string): string {\n    return `Config option \"${ name }\" should be a boolean, got ${ actualType }, converting to boolean`;\n  }\n\n  static partialEndpoint(name: string): string {\n    return `You have set custom uris without specifying the ${ name } URI; connections may not work properly`;\n  }\n\n  static mandatory(name: string): string {\n    return `${ name } is mandatory`;\n  }\n\n  static invalidOptionValue(name: string): string {\n    return `Invalid option value: ${ name }`;\n  }\n\n  static missingKeyInBootstrapValue(key: string): string {\n    return `Missing key \"${ key }\" in bootstrap value`;\n  }\n}","import { IUser } from \"./IUser\";\nimport {IContextProperty} from \"../IContextProperty\";\n\n/**\n * Creates an instance of the FeatBit user.\n *\n * @return\n *   The new {@link IUser} instance.\n */\nexport class UserBuilder {\n  private _keyId: string = '';\n  private _name: string = '';\n  private _custom: IContextProperty[] = [];\n\n  constructor(keyId: string) {\n    this._keyId = keyId;\n  }\n\n  name(name: string): UserBuilder {\n    this._name = name;\n    return this;\n  }\n\n  custom(propertyName: string, value: string): UserBuilder {\n    this._custom?.push({ name: propertyName, value: `${value}` });\n    return this;\n  }\n\n  build(): IUser {\n    return {\n      name: this._name,\n      keyId: this._keyId,\n      customizedProperties: this._custom\n    };\n  }\n}","/* eslint-disable class-methods-use-this */\n/* eslint-disable max-classes-per-file */\n\n// The classes here are static, but needs to be instantiated to\n// support the generic functionality. Which is why we do not care about using\n// `this`\n\n// These validators are also of trivial complexity, so we are allowing more than\n// one per file.\n\nimport OptionMessages from \"./OptionMessages\";\nimport { IFlagBase } from \"../evaluation\";\n\n/**\n * Interface for type validation.\n */\nexport interface TypeValidator {\n  // holding validation error messages\n  messages?: string[];\n\n  is(u: unknown): boolean;\n\n  getType(): string;\n}\n\n/**\n * Validate a factory or instance.\n */\nexport class FactoryOrInstance implements TypeValidator {\n  is(factoryOrInstance: unknown) {\n    if (Array.isArray(factoryOrInstance)) {\n      return false;\n    }\n    const anyFactory = factoryOrInstance as any;\n    const typeOfFactory = typeof anyFactory;\n    return typeOfFactory === 'function' || typeOfFactory === 'object';\n  }\n\n  getType(): string {\n    return 'factory method or object';\n  }\n}\n\n/**\n * Validate a basic type.\n */\nexport class Type<T> implements TypeValidator {\n  private typeName: string;\n\n  protected typeOf: string;\n\n  constructor(typeName: string, example: T) {\n    this.typeName = typeName;\n    this.typeOf = typeof example;\n  }\n\n  is(u: unknown): u is T {\n    if (Array.isArray(u)) {\n      return false;\n    }\n    return typeof u === this.typeOf;\n  }\n\n  getType(): string {\n    return this.typeName;\n  }\n}\n\n/**\n * Validate an array of the specified type.\n *\n * This does not validate instances of types. All class instances\n * of classes will simply objects.\n */\nexport class TypeArray<T> implements TypeValidator {\n  private typeName: string;\n\n  protected typeOf: string;\n\n  constructor(typeName: string, example: T) {\n    this.typeName = typeName;\n    this.typeOf = typeof example;\n  }\n\n  is(u: unknown): u is T {\n    if (Array.isArray(u)) {\n      if (u.length > 0) {\n        return u.every((val) => typeof val === this.typeOf);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  getType(): string {\n    return this.typeName;\n  }\n}\n\n/**\n * Validate a value is a number and is greater or eval than a minimum.\n */\nexport class NumberWithMinimum extends Type<number> {\n  readonly min: number;\n\n  constructor(min: number) {\n    super(`number with minimum value of ${ min }`, 0);\n    this.min = min;\n  }\n\n  override is(u: unknown): u is number {\n    return typeof u === this.typeOf && (u as number) >= this.min;\n  }\n}\n\n/**\n * Validate a value is a string and it matches the given expression.\n */\nexport class StringMatchingRegex extends Type<string> {\n  readonly expression: RegExp;\n\n  constructor(expression: RegExp) {\n    super(`string matching ${ expression }`, '');\n    this.expression = expression;\n  }\n\n  override is(u: unknown): u is string {\n    return !!(u as string).match(this.expression);\n  }\n}\n\n/**\n * Validate a value is a function.\n */\nexport class Function implements TypeValidator {\n  is(u: unknown): u is (...args: any[]) => void {\n    // We cannot inspect the parameters and there isn't really\n    // a generic function type we can instantiate.\n    // So the type guard is here just to make TS comfortable\n    // calling something after using this guard.\n    return typeof u === 'function';\n  }\n\n  getType(): string {\n    return 'function';\n  }\n}\n\nexport class NullableBoolean implements TypeValidator {\n  is(u: unknown): boolean {\n    return typeof u === 'boolean' || typeof u === 'undefined' || u === null;\n  }\n\n  getType(): string {\n    return 'boolean | undefined | null';\n  }\n}\n\nexport class BootstrapValidator implements TypeValidator {\n  messages: string[] = [];\n\n  is(u: unknown): boolean {\n    if (typeof u !== 'object' || u === null) {\n      this.messages.push(OptionMessages.invalidOptionValue('bootstrap'));\n      return false;\n    }\n\n    try {\n      const bootstrap = u as IFlagBase[];\n      for (let flag of bootstrap) {\n        const hasMandatoryKeys = ['id', 'variation'].every((key) => Object.keys(flag).includes(key));\n        const keys = Object.keys(flag);\n\n        if (keys.includes('id')) {\n          this.messages.push(OptionMessages.missingKeyInBootstrapValue('id'));\n        }\n\n        if (keys.includes('variation')) {\n          this.messages.push(OptionMessages.missingKeyInBootstrapValue('variation'));\n        }\n\n        if (this.messages.length > 0) {\n          return false;\n        }\n      }\n    } catch (_) {\n      this.messages.push(OptionMessages.wrongOptionType('bootstrap', this.getType(), typeof u));\n      return false;\n    }\n\n    return true;\n  }\n\n  getType(): string {\n    return 'IFlagBase[]';\n  }\n}\n\nexport class UserValidator implements TypeValidator {\n  messages: string[] = [];\n\n  is(u: unknown): boolean {\n    if (typeof u !== 'object' || u === null) {\n      this.messages.push(OptionMessages.mandatory('user'));\n      return false;\n    }\n\n    const user = u as any;\n\n    if (typeof user.keyId !== 'string' || user.keyId.trim() === '') {\n      this.messages.push(OptionMessages.mandatory('user.keyId'));\n      return false;\n    }\n\n    if (typeof user.name !== 'string' || user.name.trim() === '') {\n      this.messages.push(OptionMessages.mandatory('user.name'));\n      return false;\n    }\n\n    return true;\n  }\n\n  getType(): string {\n    return 'user';\n  }\n}\n\n// Our reference SDK, Go, parses date/time strings with the time.RFC3339Nano format.\n// This regex should match strings that are valid in that format, and no others.\n// Acceptable:\n//   2019-10-31T23:59:59Z, 2019-10-31T23:59:59.100Z,\n//   2019-10-31T23:59:59-07, 2019-10-31T23:59:59-07:00, etc.\n// Unacceptable: no \"T\", no time zone designation\nconst DATE_REGEX = /^\\d\\d\\d\\d-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d\\d*)?(Z|[-+]\\d\\d(:\\d\\d)?)/;\n\n/**\n * Validate a value is a date. Values which are numbers are treated as dates and any string\n * which if compliant with `time.RFC3339Nano` is a date.\n */\nexport class DateValidator implements TypeValidator {\n  is(u: unknown): boolean {\n    return typeof u === 'number' || (typeof u === 'string' && DATE_REGEX.test(u));\n  }\n\n  getType(): string {\n    return 'date';\n  }\n}\n\n/**\n * Validates that a string is a valid kind.\n */\nexport class KindValidator extends StringMatchingRegex {\n  constructor() {\n    super(/^(\\w|\\.|-)+$/);\n  }\n\n  override is(u: unknown): u is string {\n    return super.is(u) && u !== 'kind';\n  }\n}\n\n/**\n * A set of standard type validators.\n */\nexport class TypeValidators {\n  static readonly String = new Type<string>('string', '');\n\n  static readonly Number = new Type<number>('number', 0);\n\n  static readonly ObjectOrFactory = new FactoryOrInstance();\n\n  static readonly Object = new Type<object>('object', {});\n\n  static readonly StringArray = new TypeArray<string>('string[]', '');\n\n  static readonly Boolean = new Type<boolean>('boolean', true);\n\n  static readonly User = new Type<object>('object', {});\n\n  static readonly Bootstrap = new Type<object>('object', {});\n\n  static readonly Function = new Function();\n\n  static createTypeArray<T>(typeName: string, example: T) {\n    return new TypeArray<T>(typeName, example);\n  }\n\n  static numberWithMin(min: number): NumberWithMinimum {\n    return new NumberWithMinimum(min);\n  }\n\n  static stringMatchingRegex(expression: RegExp): StringMatchingRegex {\n    return new StringMatchingRegex(expression);\n  }\n\n  static readonly Date = new DateValidator();\n\n  static readonly Kind = new KindValidator();\n  static readonly NullableBoolean = new NullableBoolean();\n}","export * from './ClientContext';\nexport * from './IClientContext';\nexport * from './IOptions';\nexport * from './IUser';\nexport * from './IValidatedOptions';\nexport * from './OptionMessages';\nexport * from './UserBuilder';\nexport * from './Validators';","import { IInfo, IPlatformData, ISdkData } from \"../IInfo\";\nimport { name, version } from '../../version';\n\n\nexport default class BrowserInfo implements IInfo {\n  get appType(): string {\n    return 'Browser-Client-SDK';\n  }\n\n  platformData(): IPlatformData {\n    return {\n      os: {},\n      name: 'Browser',\n      additional: {},\n    };\n  }\n\n  sdkData(): ISdkData {\n    return {\n      name: name,\n      version: version,\n      userAgentBase: this.appType\n    };\n  }\n}","import { IPlatform } from \"../IPlatform\";\nimport { IInfo } from \"../IInfo\";\nimport { IRequests } from \"../requests\";\nimport { IOptions } from \"../../options/IOptions\";\nimport BrowserInfo from \"./BrowserInfo\";\nimport { BrowserRequests } from \"./BrowserRequests\";\nimport { IWebSocketWithEvents } from \"../IWebSocket\";\nimport BrowserWebSocket from \"./BrowserWebSocket\";\n\nexport default class BrowserPlatform implements IPlatform {\n  info: IInfo = new BrowserInfo();\n\n  requests: IRequests;\n  webSocket: IWebSocketWithEvents;\n\n  constructor(options: IOptions) {\n    this.requests = new BrowserRequests();\n    this.webSocket = new BrowserWebSocket();\n  }\n}","import { IRequestOptions, IRequests } from \"../requests\";\n\nexport  class BrowserRequests implements IRequests {\n  fetch(url: string, options: IRequestOptions = {}): Promise<any> {\n    return fetch(url, options);\n  }\n}","import { IWebSocket, IWebSocketConfig } from \"../IWebSocket\";\nimport { Emits } from \"../../utils/Emits\";\nimport { IEventEmitter } from \"../../utils/IEventEmitter\";\nimport { EventEmitter } from \"../../utils/EventEmitter\";\nimport { generateConnectionToken } from \"../../data-sync/utils\";\nimport { StreamResponseEventType } from \"../../data-sync/types\";\nimport { IUser } from \"../../options/IUser\";\n\nconst socketConnectionIntervals = [1000, 3000, 5000, 7000, 11000, 13000, 30000, 60000];\n\nclass BrowserWebSocket implements IWebSocket {\n  emitter: IEventEmitter;\n  private ws?: WebSocket;\n  private retryCounter = 0;\n  private closed: boolean = false;\n\n  private _config: IWebSocketConfig = {} as IWebSocketConfig;\n\n  constructor() {\n    this.emitter = new EventEmitter();\n  }\n\n  identify(user: IUser) {\n    this._config.user = user;\n    this.doDataSync();\n  }\n\n  connect() {\n    let that = this;\n    const startTime = Date.now();\n    const url = this._config.streamingUri.replace(/^http/, 'ws') + `?type=client&token=${ generateConnectionToken(this._config.sdkKey) }`;\n    this.ws = new WebSocket(url);\n\n    // Connection opened\n    that.ws?.addEventListener('open', function (this: WebSocket, event) {\n      // this is the websocket instance to which the current listener is binded to, it's different from that.socket\n      that._config.logger.info(`WebSocket connection succeeded, connection time: ${ Date.now() - startTime } ms`);\n      that.doDataSync();\n      that.sendPingMessage();\n    });\n\n    // Connection closed\n    that.ws?.addEventListener('close', function (event) {\n      that._config.logger.warn('WebSocket closed');\n      if (event.code === 4003) { // do not reconnect when 4003\n        return;\n      }\n\n      that.reconnect();\n    });\n\n    // Connection error\n    that.ws?.addEventListener('error', function (event) {\n      // reconnect\n      that._config.logger.debug('error');\n    });\n\n    // Listen for messages\n    that.ws?.addEventListener('message', function (event) {\n      const message = JSON.parse(event.data as string);\n      if (message.messageType === 'data-sync') {\n        switch (message.data.eventType) {\n          case StreamResponseEventType.patch:\n            that.emitter.emit('patch', message);\n            break;\n          case StreamResponseEventType.full:\n            that.emitter.emit('put', message);\n            break;\n        }\n      }\n    });\n  }\n\n  close() {\n    this.closed = true;\n    this.ws?.close(4003, 'The client is closed by user');\n    this.ws = undefined;\n  }\n\n  config(param: IWebSocketConfig) {\n    if (param.emitter) {\n      this.emitter = param.emitter;\n    }\n\n    this._config = {...param};\n  }\n\n  private sendPingMessage() {\n    const payload = {\n      messageType: 'ping',\n      data: null\n    };\n\n    setTimeout(() => {\n      try {\n        if (this.ws?.readyState === WebSocket.OPEN) {\n          this._config.logger.debug('sending ping')\n          this.ws.send(JSON.stringify(payload));\n          this.sendPingMessage();\n        } else {\n          this._config.logger.debug(`socket closed at ${ new Date() }`);\n        }\n      } catch (err) {\n        this._config.logger.debug(err);\n      }\n    }, this._config.pingInterval);\n  }\n\n  private doDataSync() {\n    const payload = {\n      messageType: 'data-sync',\n      data: {\n        timestamp: this._config.getStoreTimestamp(),\n        user: this._config.user\n      }\n    };\n\n    try {\n      if (this.ws?.readyState === WebSocket.OPEN) {\n        this._config.logger.debug('requesting data');\n        this.ws?.send(JSON.stringify(payload));\n      } else {\n        this._config.logger.error(`not requesting data because socket not open`);\n      }\n    } catch (err) {\n      this._config.logger.debug(err);\n    }\n  }\n\n  private reconnect() {\n    if (!this.closed) {\n      this.ws = undefined;\n      const waitTime = socketConnectionIntervals[Math.min(this.retryCounter++, socketConnectionIntervals.length - 1)];\n      this._config.logger.info(`The client will try to reconnect in ${ waitTime } milliseconds.`);\n      setTimeout(() => {\n        this._config.logger.info(`The client is trying to reconnect, flag evaluation results may be stale until reconnected, waited for: ${ waitTime } milliseconds`);\n        this.connect();\n      }, waitTime);\n    }\n  }\n}\n\nexport default Emits(BrowserWebSocket);","import { FbClientCore } from \"../../FbClientCore\";\nimport { IOptions } from \"../../options/IOptions\";\nimport { BasicLogger } from \"../../logging/BasicLogger\";\nimport { EventEmitter } from \"../../utils/EventEmitter\";\nimport { SafeLogger } from \"../../logging/SafeLogger\";\nimport { Emits } from \"../../utils/Emits\";\nimport { IEventEmitter } from \"../../utils/IEventEmitter\";\nimport BrowserPlatform from \"./BrowserPlatform\";\nimport LocalStorageStore from \"./LocalStorageStore\";\nimport { IPlatform } from \"../IPlatform\";\n\n/**\n * @ignore\n */\nclass FbClient extends FbClientCore {\n  emitter: IEventEmitter;\n\n  constructor(options: IOptions, platform: IPlatform | undefined = undefined) {\n    const fallbackLogger = new BasicLogger({\n      level: 'none',\n      destination: console.log\n    });\n\n    const logger = options.logger ? new SafeLogger(options.logger, fallbackLogger) : fallbackLogger;\n\n    const emitter = new EventEmitter(logger);\n\n    let { store } = options;\n    if (!store) {\n      store = new LocalStorageStore(options);\n    }\n\n    super(\n      {...options, logger, store },\n      platform ?? new BrowserPlatform({...options, logger}),\n      {\n        onError: (err: Error) => {\n          if (emitter.listenerCount('error')) {\n            emitter.emit('error', err);\n          }\n        },\n        onFailed: (err: Error) => {\n          emitter.emit('failed', err);\n        },\n        onReady: () => {\n          emitter.emit('ready');\n        },\n        onUpdate: (keys: string[]) => {\n          emitter.emit('update', [keys]);\n          keys.forEach((key) => emitter.emit(`update:${ key }`, key));\n        },\n        hasEventListeners: () =>\n          emitter\n            .eventNames()\n            .some(\n              (name) =>\n                name === 'update' || (typeof name === 'string' && name.startsWith('update:')),\n            ),\n      },\n    );\n\n    this.emitter = emitter;\n  }\n}\n\nexport default Emits(FbClient);","import {\n  StoreStorageKey,\n  IStoreDataStorage, CurrentUserStorageKey\n} from \"../../store/store\";\nimport { IOptions } from \"../../options/IOptions\";\nimport { BaseStore } from \"../../store/BaseStore\";\nimport { ILogger } from \"../../logging\";\nimport { serializeUser } from \"../../utils/serializeUser\";\n\nexport default class LocalStorageStore extends BaseStore {\n  private logger: ILogger;\n\n  constructor(options: IOptions) {\n    super();\n\n    this.logger = options.logger!;\n  }\n\n  /* eslint-disable class-methods-use-this */\n  close(): void {\n    // For the LocalStorage store this is a no-op.\n  }\n\n  get description(): string {\n    return 'local-storage-store'\n  }\n\n  // This method needs to be overridden in the child class\n  protected async saveUser(): Promise<void> {\n    localStorage.setItem(CurrentUserStorageKey, serializeUser(this._user));\n  }\n\n  protected override async dumpStoreToStorage() {\n    const storageKey = `${StoreStorageKey}-${this._user.keyId}`;\n    localStorage.setItem(storageKey, JSON.stringify(this.store));\n  }\n\n  protected override async loadStoreFromStorage() {\n    const storageKey = `${StoreStorageKey}-${this._user.keyId}`;\n    const dataStoreStr = localStorage.getItem(storageKey);\n    let store: IStoreDataStorage | null = null;\n\n    try {\n      if (dataStoreStr && dataStoreStr.trim().length > 0) {\n        store = JSON.parse(dataStoreStr);\n      }\n    } catch (err) {\n      this.logger.error(`error while loading local data store: ${storageKey}`, err);\n    }\n\n    if (!!store) {\n      this.store = store;\n    } else {\n      this.store = {\n        flags: {},\n        version: 0\n      };\n    }\n  }\n}","export * from './IInfo';\nexport * from './IStore';\nexport * from './IPlatform';\nexport * from './IWebSocket';\nexport * from './requests';\nexport * from './browser/BrowserRequests';\n\nimport BrowserWebSocket from './browser/BrowserWebSocket';\n\nexport {\n  BrowserWebSocket\n};","import { IStore } from \"../platform\";\nimport { IKeyedStoreItem, IStoreDataStorage, IStoreItem, IStoreKindData } from \"./store\";\nimport { IUser } from \"../options\";\nimport { IDataKind } from \"../IDataKind\";\n\nexport class BaseStore implements IStore {\n  protected store: IStoreDataStorage  = {} as IStoreDataStorage;\n\n  protected initCalled = false;\n\n  protected _user: IUser = {} as IUser;\n\n  constructor() {\n  }\n\n  async identify(user: IUser) {\n    this._user = {...user};\n\n    await this.saveUser();\n    await this.loadStoreFromStorage();\n  }\n\n  get user(): IUser {\n    return this._user;\n  }\n\n  protected async addItem(kind: IDataKind, key: string, item: IStoreItem) {\n    let items = this.store[kind.namespace];\n    if (!items) {\n      items = {};\n      this.store[kind.namespace] = items;\n    }\n    if (Object.hasOwnProperty.call(items, key)) {\n      const old = items[key];\n      if (!old || old.version < item.version) {\n        items[key] = item;\n      }\n    } else {\n      items[key] = item;\n    }\n\n    if (item.version > this.store.version) {\n      this.store.version = item.version;\n    }\n\n    await this.dumpStoreToStorage();\n  }\n\n  get(kind: IDataKind, key: string): IStoreItem | null {\n    const items = this.store[kind.namespace];\n    if (items) {\n      if (Object.prototype.hasOwnProperty.call(items, key)) {\n        const item = items[key];\n        if (item) {\n          return item;\n        }\n      }\n    }\n    return null;\n  }\n\n  all(kind: IDataKind): [IStoreKindData, number] {\n    const result: IStoreKindData = {};\n    const items = this.store[kind.namespace] ?? {};\n    Object.entries(items).forEach(([key, item]) => {\n      if (item) {\n        result[key] = <IStoreItem>item;\n      }\n    });\n\n    return [result, this.store.version];\n  }\n\n  async init(allData: IStoreDataStorage) {\n    this.store = allData as IStoreDataStorage;\n\n    Object.keys(allData).map(namespace => {\n      Object.entries(allData[namespace]).forEach(([_, item]) => {\n        const ele = item as IStoreItem;\n        if (ele.version > this.store.version) {\n          this.store.version = ele.version;\n        }\n      })\n    });\n\n    await this.dumpStoreToStorage();\n    this.initCalled = true;\n  }\n\n  async upsert(kind: IDataKind, data: IKeyedStoreItem) {\n    await this.addItem(kind, data.key, data);\n  }\n\n  initialized(): boolean {\n    return this.initCalled;\n  }\n\n  /* eslint-disable class-methods-use-this */\n  close(): void {\n    // For the LocalStorage store this is a no-op.\n  }\n\n  get version(): number {\n    return this.store.version;\n  }\n\n  // This getter needs to be overridden in the child class\n  get description(): string {\n    return '';\n  }\n\n  // This method needs to be overridden in the child class\n  protected async saveUser(): Promise<void> {\n  }\n\n  // This method needs to be overridden in the child class\n  protected async loadStoreFromStorage(): Promise<void> {\n  }\n\n  // This method needs to be overridden in the child class\n  protected async dumpStoreToStorage(): Promise<void> {\n  }\n}","import { IDataKind } from \"../IDataKind\";\n\nexport default class DataKinds {\n  static readonly Flags: IDataKind = {\n    namespace: 'flags'\n  };\n}","import {\n  StoreStorageKey,\n  IStoreDataStorage\n} from \"./store\";\nimport { BaseStore } from \"./BaseStore\";\n\nexport default class InMemoryStore extends BaseStore {\n  private allStores: { [DataStoreStorageKey: string]: IStoreDataStorage } = {};\n\n  constructor() {\n    super();\n  }\n\n  /* eslint-disable class-methods-use-this */\n  close(): void {\n    // For the LocalStorage store this is a no-op.\n  }\n\n  get description(): string {\n    return 'in-memory-store'\n  }\n\n  protected async saveUser(): Promise<void> {\n    // For in-memory store, this is a no-op.\n  }\n\n  protected override async dumpStoreToStorage() {\n    const storageKey = `${StoreStorageKey}-${this._user.keyId}`;\n    this.allStores[storageKey] = {...this.store};\n  }\n\n  protected override async loadStoreFromStorage() {\n    const storageKey = `${StoreStorageKey}-${this._user.keyId}`;\n\n    this.store = this.allStores[storageKey] ?? { flags: {}, version: 0 };\n  }\n}","export * from './DataKinds';\nexport * from './IDataSourceUpdates';\nexport * from './InMemoryStore';\nexport * from './serialization';\nexport * from './store';\nexport * from './BaseStore';","import { IFlag } from \"../evaluation/data/IFlag\";\nimport DataKinds from \"./DataKinds\";\nimport { IVersionedData } from \"../IVersionedData\";\nimport { IDataKind } from \"../IDataKind\";\n\nexport interface Flags {\n  flags: { [name: string]: IFlag };\n}\n\ntype VersionedFlag = IVersionedData & IFlag;\n\nexport interface IPatchData {\n  data: VersionedFlag;\n  kind: IDataKind;\n}\n\n/**\n * @internal\n */\nexport function deserializeAll(flags: IFlag[]): Flags {\n  const result = {\n    [DataKinds.Flags.namespace]: {}\n  };\n\n  if (flags?.length) {\n    result[DataKinds.Flags.namespace] = flags.reduce((acc: any, cur: any) => {\n      acc[cur.id] = {...cur, version: cur.timestamp || 0, key: cur.id, variations: cur.variationOptions};\n      return acc;\n    }, {});\n  }\n\n  return result as any as Flags;\n}\n\n/**\n * @internal\n */\nexport function deserializePatch(flags: IFlag[]): IPatchData[] {\n  const result = [\n    ...flags?.map(item => ({\n      data: {\n        ...item,\n        version:item.timestamp,\n        key: item.id,\n        variations: item.variationOptions\n      },\n      kind: DataKinds.Flags\n    })) || []\n  ];\n\n  return result as any as IPatchData[];\n}\n","export const StoreStorageKey = 'fb-datastore';\n\nexport const CurrentUserStorageKey = 'fb-user';\n\n/**\n * Represents an item which can be stored in the feature store.\n */\nexport interface IStoreItem {\n  version: number;\n\n  // The actual data associated with the item.\n  [attribute: string]: any;\n}\n\n/**\n * When upserting an item it must contain a key.\n */\nexport interface IKeyedStoreItem extends IStoreItem {\n  key: string;\n}\n\n/**\n * Represents the storage for a single kind of data. e.g. 'flag' or 'segment'.\n */\nexport interface IStoreKindData {\n  [key: string]: IStoreItem;\n}\n\n/**\n * Represents the storage for the full data store.\n */\nexport interface IStoreDataStorage {\n  flags: IStoreKindData;\n  version: number;\n\n  // This attribute is to ingore the type check error\n  [attribute: string]: any;\n}","import { IEventEmitter } from \"./IEventEmitter\";\n\nexport type EventableConstructor<T = {}> = new (...args: any[]) => T;\nexport type Eventable = EventableConstructor<{ emitter: IEventEmitter }>;\n\n/**\n * Adds the implementation of an event emitter to something that contains\n * a field of `emitter` with type `EventEmitter`.\n * @param Base The class to derive the mixin from.\n * @returns A class extending the base with an event emitter.\n */\nexport function Emits<TBase extends Eventable>(Base: TBase) {\n  return class WithEvents extends Base implements IEventEmitter {\n    on(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\n      this.emitter.on(eventName, listener, context);\n      return this;\n    }\n\n    addListener(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\n      this.emitter.addListener(eventName, listener, context);\n      return this;\n    }\n\n    once(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\n      this.emitter.once(eventName, listener, context);\n      return this;\n    }\n\n    removeListener(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\n      this.emitter.removeListener(eventName, listener, context);\n      return this;\n    }\n\n    off(eventName: string | symbol, listener: (...args: any) => void, context?: any): this {\n      this.emitter.off(eventName, listener, context);\n      return this;\n    }\n\n    removeAllListeners(event?: string | symbol): this {\n      this.emitter.removeAllListeners(event);\n      return this;\n    }\n\n    listeners(eventName: string | symbol): Function[] {\n      return this.emitter.listeners(eventName);\n    }\n\n    emit(eventName: string | symbol, ...args: any[]): this  {\n      this.emitter.emit(eventName, args);\n      return this;\n    }\n\n    listenerCount(eventName: string | symbol): number {\n      return this.emitter.listenerCount(eventName);\n    }\n\n    prependListener(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\n      this.emitter.prependListener(eventName, listener, context);\n      return this;\n    }\n\n    prependOnceListener(eventName: string | symbol, listener: (...args: any[]) => void, context?: any): this {\n      this.emitter.prependOnceListener(eventName, listener, context);\n      return this;\n    }\n\n    eventNames(): (string | symbol)[] {\n      return this.emitter.eventNames();\n    }\n\n    maybeReportError (error: any): this {\n      this.emitter.maybeReportError(error);\n      return this;\n    }\n  };\n}","import { ILogger } from \"../logging/ILogger\";\nimport { IEventEmitter } from \"./IEventEmitter\";\n\ninterface Events {\n  [key: string | symbol]: {\n    handler: (...args: any[]) => void;\n    context: any;\n  }[];\n}\n\nexport class EventEmitter implements IEventEmitter {\n  private events: Events = {};\n\n  constructor(private logger?: ILogger) {}\n\n  private listeningTo (event: string) {\n    return !!this.events[event];\n  }\n\n  on (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\n    this.events[event] = this.events[event] || [];\n    this.events[event] = this.events[event].concat({\n      handler: handler,\n      context: context,\n    });\n\n    return this;\n  }\n\n  addListener (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\n    return this.on(event, handler, context);\n  }\n\n  once (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\n    const onceHandler = (...args: any[]) => {\n      this.off(event, onceHandler, context);\n      handler.apply(context, args);\n    };\n    return this.on(event, onceHandler, context);\n  }\n\n  off (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\n    if (!this.events[event]) {\n      return this;\n    }\n    for (let i = 0; i < this.events[event].length; i++) {\n      if (this.events[event][i].handler === handler && this.events[event][i].context === context) {\n        this.events[event] = this.events[event].slice(0, i).concat(this.events[event].slice(i + 1));\n      }\n    }\n\n    return this;\n  }\n\n  removeListener (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\n    return this.off(event, handler, context);\n  }\n\n  removeAllListeners (event?: string | symbol): this {\n    if (event) {\n      delete this.events[event];\n    } else {\n      this.events = {};\n    }\n\n    return this;\n  }\n\n  listeners (event: string | symbol): Function[] {\n    return this.events[event] ? this.events[event].map((event) => event.handler) : [];\n  }\n\n  emit (event: string | symbol, ...args: any[]): this {\n    if (!this.events[event]) {\n      return this;\n    }\n    // Copy the list of handlers before iterating, in case any handler adds or removes another handler.\n    // Any such changes should not affect what we do here-- we want to notify every handler that existed\n    // at the moment that the event was fired.\n    const copiedHandlers = [...this.events[event]];\n    for (let i = 0; i < copiedHandlers.length; i++) {\n      copiedHandlers[i].handler.apply(copiedHandlers[i].context, Array.prototype.slice.call(arguments, 1));\n    }\n\n    return this;\n  }\n\n  listenerCount (event: string | symbol): number {\n    return this.events[event] ? this.events[event].length : 0;\n  }\n\n  prependListener (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\n    this.events[event] = this.events[event] || [];\n    this.events[event] = [\n      {\n        handler: handler,\n        context: context,\n      },\n      ...this.events[event]\n    ];\n\n    return this;\n  }\n\n  prependOnceListener (event: string | symbol, handler: (...args: any[]) => void, context?: any): this {\n    const onceHandler = (...args: any[]) => {\n      this.off(event, onceHandler, context);\n      handler.apply(context, args);\n    };\n    return this.prependListener(event, onceHandler, context);\n  }\n\n  eventNames (): (string | symbol)[] {\n    return Object.keys(this.events);\n  }\n\n  maybeReportError (error: any): this {\n    if (!error) {\n      return this;\n    }\n    if (this.listeningTo('error')) {\n      this.emit('error', error);\n    } else {\n      this.logger?.error(error);\n    }\n\n    return this;\n  }\n}","import { Regex } from \"./Regex\";\n\nexport interface IConvertResult<TValue> {\n  isSucceeded: boolean,\n  value?: TValue\n}\n\nexport class ValueConverters {\n  static bool(value: string): IConvertResult<boolean> {\n    if (value?.toUpperCase() === 'TRUE') {\n      return ValueConverters.success<boolean>(true);\n    }\n\n    if (value?.toUpperCase() === 'FALSE') {\n      return ValueConverters.success<boolean>(false);\n    }\n\n    return ValueConverters.error<boolean>();\n  }\n\n  static number(value: string): IConvertResult<number> {\n    const num = Number(value);\n\n    if (Number.isNaN(num)) {\n      return ValueConverters.error<number>();\n    }\n\n    return ValueConverters.success<number>(num);\n  }\n\n  static string(value: string): IConvertResult<string> {\n    return ValueConverters.success<string>(value);\n  }\n\n  static json(value: string): IConvertResult<unknown> {\n    try {\n      const val = JSON.parse(value);\n      return ValueConverters.success<unknown>(val);\n    } catch (err) {\n      return ValueConverters.error<unknown>();\n    }\n  }\n\n  private static success<TValue>(value: TValue): IConvertResult<TValue> {\n    return {\n      isSucceeded: true,\n      value: value\n    }\n  }\n\n  private static error<TValue>(): IConvertResult<TValue> {\n    return {\n      isSucceeded: false\n    }\n  }\n}","// This function is designed to remove any trailing forward slashes at the end of the provided URI string\nexport function canonicalizeUri(uri: string): string {\n  return uri.replace(/\\/+$/, '');\n}","/**\n * Wait before calling the same function. Useful for expensive calls.\n * Adapted from https://amitd.co/code/typescript/debounce.\n *\n * @return The debounced function.\n *\n * @example\n *\n * ```js\n * const debouncedFunction = debounce(e => {\n *   console.log(e);\n * }, 5000);\n *\n * // Console logs 'Hello world again ' after 5 seconds\n * debouncedFunction('Hello world');\n * debouncedFunction('Hello world again');\n * ```\n * @param fn The function to be debounced.\n * @param delayMs Defaults to 5 seconds.\n */\nexport const debounce = <T extends (...args: any[]) => ReturnType<T>>(\n  fn: T,\n  delayMs: number = 5000,\n): ((...args: Parameters<T>) => void) => {\n  let timer: ReturnType<typeof setTimeout>;\n\n  return (...args: Parameters<T>) => {\n    clearTimeout(timer);\n    timer = setTimeout(() => {\n      fn(...args);\n    }, delayMs);\n  };\n};\n","import { IInfo } from \"../platform/IInfo\";\n\nexport type Headers = {\n  Authorization: string;\n  'User-Agent': string;\n  'Content-Type': string;\n};\n\nexport function defaultHeaders(\n  sdkKey: string,\n  info: IInfo\n): Headers {\n  const {userAgentBase, version} = info.sdkData();\n\n  const headers: Headers = {\n    'Content-Type': 'application/json',\n    'User-Agent': `${ userAgentBase ?? info.appType }/${ version }`,\n    'Authorization': sdkKey\n  };\n\n  return headers;\n}\n\nexport function httpErrorMessage(\n  err: {\n    status: number;\n    message: string;\n  },\n  context: string,\n  retryMessage?: string,\n): string {\n  let desc;\n  if (err.status) {\n    desc = `error ${ err.status }${ err.status === 401 ? ' (invalid SDK key)' : '' }`;\n  } else {\n    desc = `I/O error (${ err.message || err })`;\n  }\n  const action = retryMessage ?? 'giving up permanently';\n  return `Received ${ desc } for ${ context } - ${ action }`;\n}\n","export * from './isNullOrUndefined';\nexport * from './sleep';\nexport * from './ValueConverters';\nexport * from './VoidFunction';\nexport * from './serializeUser';\nexport * from './debounce';","export function isNullOrUndefined(val: any) {\n  return val === null || val === undefined;\n}","import { IUser } from \"../options/IUser\";\n\nexport function serializeUser(user: IUser | undefined): string {\n  if (!user) {\n    return '';\n  }\n\n  const builtInProperties = `${user.keyId},${user.name}`;\n\n  const customizedProperties = user.customizedProperties\n    ?.sort((a, b) => {\n      const nameA = a.name.toLowerCase();\n      const nameB = b.name.toLowerCase();\n      if (nameA < nameB) {\n        return -1;\n      }\n\n      if (nameA > nameB) {\n        return 1;\n      }\n\n      return 0;\n    })\n    .map(p => `${p.name}:${p.value}`)\n    .join(',');\n\n  return `${builtInProperties},${customizedProperties}`;\n}","const sleep = async (delayMillis: number = 1000) =>\n  new Promise((resolve) => {\n    setTimeout(resolve, delayMillis);\n  });\n\nexport default sleep;","export const version = \"3.0.8\"; export const name = \"@featbit/js-client-sdk\";\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(9872);\n"],"names":["root","factory","exports","module","define","amd","a","i","this","validations","startWaitTime","TypeValidators","Number","sdkKey","String","pollingUri","streamingUri","eventsUri","webSocketPingInterval","logger","Object","store","ObjectOrFactory","dataSynchronizer","flushInterval","maxEventsInQueue","pollingInterval","offline","Boolean","dataSyncMode","bootstrap","Bootstrap","user","User","defaultValues","DataSyncModeEnum","STREAMING","sendEvents","options","undefined","constructor","bootstrapProvider","NullBootstrapProvider","errors","validatedOptions","keys","forEach","optionName","optionValue","validator","is","getType","push","wrongOptionTypeBoolean","NumberWithMinimum","min","optionBelowMinimum","UserValidator","messages","wrongOptionType","warn","unknownOption","validateTypesAndNames","error","streamingUriMissing","isNullOrUndefined","EmptyString","pollingUriMissing","eventsUriMissing","partialEndpoint","POLLING","validateEndpoints","canonicalizeUri","length","JsonBootstrapProvider","_","info","Function","dataSynchronizerFactory","storeFactory","Context","valid","message","fromUser","contextForError","keyId","name","trim","context","_user","value","property","customizedProperties","find","x","_options","build","_platform","platform","mode","flags","ClientState","callbacks","state","Initializing","onError","onFailed","onReady","onUpdate","hasEventListeners","config","Error","init","clientContext","identify","dataSourceUpdates","evaluator","populate","eventProcessor","NullEventProcessor","NullDataSynchronizer","initSuccess","DefaultEventProcessor","listeners","createStreamListeners","put","patch","webSocket","version","requests","e","dataSourceErrorHandler","start","all","Flags","setTimeout","initialized","msg","TimeoutError","Failed","rejectionReason","initReject","Initialized","waitForInitialization","initializedPromise","Promise","resolve","reject","initResolve","boolVariation","key","defaultValue","evaluateCore","ValueConverters","bool","boolVariationDetail","jsonVariation","json","jsonVariationDetail","numberVariation","number","numberVariationDetail","stringVariation","string","stringVariationDetail","variation","variationDetail","getAllVariations","ClientError","result","map","flagKey","evalResult","evaluate","kind","reason","close","track","eventName","metricValue","metricEvent","MetricEvent","appType","record","flush","callback","err","typeConverter","ReasonKinds","FlagNotFound","toEvalEvent","isSucceeded","WrongType","code","flag","variationOptions","id","data","deserializeAll","dataSet","userKeyId","MinInt","onChange","allData","checkForChanges","doInit","oldData","then","updatedKeys","flatMap","namespace","oldDataForKind","newDataForKind","mergedData","filter","isUpdated","upsert","doUpsert","oldItem","get","newData","createPutListener","onPutCompleteHandler","deserializeData","processJson","initData","debug","createPatchListener","onPatchCompleteHandler","deserializePatch","item","onCompleteHandlers","Map","set","stop","requestor","getStoreTimestamp","errorHandler","stopped","poll","startTime","Date","now","requestData","body","elapsed","sleepFor","Math","max","status","isHttpRecoverable","httpErrorMessage","PollingError","featureFlags","processStreamResponse","JSON","parse","messageType","eventType","StreamResponseEventType","full","timeoutHandle","clearTimeout","headers","defaultHeaders","uri","request","requestUrl","res","fetch","text","timestamp","payload","cb","method","stringify","StreamingError","socket","pingInterval","addListener","event","logConnectionStarted","connect","connectionAttemptStartTime","alphabet","encodeNumber","param","s","slice","split","n","join","replace","timestampCode","toString","floor","random","super","UnexpectedResponseError","EvalResult","flagNotFound","matched","val","Match","targetedVariation","variations","v","EvalEvent","sendToExperiment","VariationDataType","closed","eventQueue","DefaultEventQueue","eventDispatcher","EventDispatcher","flushLoop","flushEvent","FlushEvent","waitForCompletion","shutdown","ShutdownEvent","addEvent","complete","capacity","events","clear","shift","eventsSnapshot","isEmpty","send","retry","DeliveryStatus","Succeeded","FailedAndMustShutDown","serialize","toPayload","queue","maxEventPerRequest","buffer","sender","DefaultEventSender","serializer","DefaultEventSerializer","dispatchLoop","running","PayloadEvent","addEventToBuffer","triggerFlush","snapshot","flushEvents","total","getUniqueEvents","uniqueEvents","hashes","includes","hash","AsyncEvent","getTime","isCompletedPromise","resolveFn","userPayload","metrics","route","numericValue","type","hasObject","m","featureFlagKey","LogPriority","none","LevelNames","BasicLogger","logLevel","level","destination","formatter","tryFormat","args","tryWrite","console","log","prefix","loggerRequirements","fallback","entries","tryStringify","prototype","hasOwnProperty","call","TypeError","indexOf","escapes","d","toNumber","parseInt","toInt","f","parseFloat","toFloat","j","o","O","c","formatString","out","char","charAt","nextChar","configuration","expectedType","actualType","mandatory","invalidOptionValue","missingKeyInBootstrapValue","_keyId","_name","_custom","custom","propertyName","FactoryOrInstance","factoryOrInstance","Array","isArray","typeOfFactory","Type","typeName","example","typeOf","u","TypeArray","every","StringMatchingRegex","expression","match","NullableBoolean","DATE_REGEX","DateValidator","test","KindValidator","createTypeArray","numberWithMin","stringMatchingRegex","StringArray","Kind","platformData","os","additional","sdkData","userAgentBase","BrowserRequests","url","socketConnectionIntervals","Emits","retryCounter","_config","emitter","EventEmitter","doDataSync","that","generateConnectionToken","ws","WebSocket","addEventListener","sendPingMessage","reconnect","emit","readyState","OPEN","waitTime","FbClient","FbClientCore","fallbackLogger","SafeLogger","listenerCount","eventNames","some","startsWith","LocalStorageStore","BaseStore","description","saveUser","localStorage","setItem","CurrentUserStorageKey","serializeUser","dumpStoreToStorage","storageKey","StoreStorageKey","loadStoreFromStorage","dataStoreStr","getItem","BrowserWebSocket","initCalled","addItem","items","old","ele","DataKinds","InMemoryStore","allStores","reduce","acc","cur","Base","on","listener","once","removeListener","off","removeAllListeners","prependListener","prependOnceListener","maybeReportError","listeningTo","handler","concat","onceHandler","apply","copiedHandlers","arguments","toUpperCase","success","num","isNaN","debounce","fn","delayMs","timer","retryMessage","desc","sort","b","nameA","toLowerCase","nameB","p","delayMillis","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}